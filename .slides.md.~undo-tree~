(undo-tree-save-format-version . 1)
"9be556524808f050323e5d73e13d7ec9ae031cdd"
[nil nil nil nil (25683 55891 373817 434000) 0 nil]
([nil nil ((#("
" 0 1 (fontified t)) . 3180) (undo-tree-id3 . -1) (t 25683 55831 559652 87000)) nil (25683 55891 373816 91000) 0 nil])
([nil nil ((#("#" 0 1 (face markdown-header-delimiter-face markdown-heading-2-atx (3180 3212 nil nil nil nil nil nil 3180 3183 3183 3212 3212 3212 #<buffer slides.md>) markdown-heading (3180 3212 nil nil nil nil nil nil 3180 3183 3183 3212 3212 3212 #<buffer slides.md>) fontified t)) . -3181) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) 3182) nil (25683 55891 373812 74000) 0 nil])
([nil nil ((3241 . 3243) (3230 . 3241) (#("f" 0 1 (fontified t)) . -3230) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (#("r" 0 1 (fontified t)) . -3231) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (#("i" 0 1 (fontified t)) . -3232) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (#("d" 0 1 (fontified t)) . -3233) (undo-tree-id21 . -1) (undo-tree-id22 . -1) 3234 (3230 . 3234) (3225 . 3230) (#("\"" 0 1 (fontified t)) . -3225) (undo-tree-id23 . -1) (undo-tree-id24 . -1) 3226 (3223 . 3226) (3218 . 3223) (#("cla" 0 3 (fontified t)) . -3218) (undo-tree-id25 . -3) (undo-tree-id26 . -3) 3221 (3214 . 3221) (3213 . 3214) (3212 . 3214) (t 25683 55891 375195 645000)) nil (25683 55970 653322 0) 0 nil])
([nil nil ((3245 . 3252) (3244 . 3246)) nil (25683 55970 653311 370000) 0 nil])
([nil nil ((3683 . 3684) (3682 . 3687) (3681 . 3683)) nil (25683 55970 653310 639000) 0 nil])
([nil nil ((#("fine-tuning = $\\Phi_0+\\Delta\\Phi$, 其中 $\\Phi_0, \\Delta\\Phi \\in \\mathbb{R}^{d\\times d}$
LoRA 將 $\\Delta\\Phi$ 分解成  $\\Delta\\Phi=\\frac{\\alpha}{r}AB^{\\top}$, 其中 $AB \\in \\mathbb{R}^{d\\times r}$, 且 $r\\ll d$，
因此 LoRA 的可訓練參數遠比 full fine-tuning 更少，
並且在 inference 時可以將 $\\Phi_0$ 與 $AB^{\\top}$ 事先相加，就不會增加推理消耗的運算量

" 0 15 (fontified t) 15 16 (fontified t face (markdown-markup-face) invisible markdown-markup) 16 19 (fontified t) 19 20 (fontified t face (markdown-markup-face) invisible markdown-markup) 20 22 (fontified t face (markdown-italic-face)) 22 23 (fontified t invisible markdown-markup face (markdown-markup-face markdown-italic-face)) 23 28 (fontified t face (markdown-italic-face)) 28 29 (fontified t invisible markdown-markup face (markdown-markup-face markdown-italic-face)) 29 39 (fontified t face (markdown-italic-face)) 39 40 (fontified t invisible markdown-markup face (markdown-markup-face markdown-italic-face)) 40 43 (fontified t face (markdown-italic-face)) 43 44 (fontified t face (markdown-markup-face) invisible markdown-markup) 44 47 (fontified t) 47 48 (fontified t face (markdown-markup-face) invisible markdown-markup) 48 53 (fontified t) 53 54 (fontified t face (markdown-markup-face) invisible markdown-markup) 54 58 (fontified t) 58 59 (fontified t face (markdown-markup-face) invisible markdown-markup) 59 62 (fontified t) 62 63 (fontified t face (markdown-markup-face) invisible markdown-markup) 63 75 (fontified t) 75 76 (fontified t face (markdown-markup-face) invisible markdown-markup) 76 86 (fontified t) 86 94 (fontified t) 94 95 (fontified t face (markdown-markup-face) invisible markdown-markup) 95 100 (fontified t) 100 101 (fontified t face (markdown-markup-face) invisible markdown-markup) 101 112 (fontified t) 112 113 (fontified t face (markdown-markup-face) invisible markdown-markup) 113 118 (fontified t) 118 119 (fontified t face (markdown-markup-face) invisible markdown-markup) 119 123 (fontified t) 123 124 (fontified t face (markdown-markup-face) invisible markdown-markup) 124 129 (fontified t) 129 130 (fontified t face (markdown-markup-face) invisible markdown-markup) 130 143 (fontified t) 143 144 (fontified t face (markdown-markup-face) invisible markdown-markup) 144 158 (fontified t) 158 159 (fontified t face (markdown-markup-face) invisible markdown-markup) 159 162 (fontified t) 162 163 (fontified t face (markdown-markup-face) invisible markdown-markup) 163 175 (fontified t) 175 176 (fontified t face (markdown-markup-face) invisible markdown-markup) 176 191 (fontified t) 191 192 (fontified t face (markdown-markup-face) invisible markdown-markup) 192 199 (fontified t) 199 257 (fontified t) 257 258 (fontified t face (markdown-markup-face) invisible markdown-markup) 258 272 (fontified t) 272 273 (fontified t face (markdown-markup-face) invisible markdown-markup) 273 298 (fontified t) 298 299 (fontified t)) . 3383) (undo-tree-id7 . -298) (undo-tree-id8 . -298) (undo-tree-id9 . -298) (undo-tree-id10 . -298) (undo-tree-id11 . -2) (undo-tree-id12 . -298) (undo-tree-id13 . -298) (undo-tree-id14 . -299) 3681) nil (25683 55970 653309 96000) 0 nil])
([nil nil ((3248 . 3250)) nil (25683 55970 653303 175000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3547 . 3548) (nil fontified nil 3249 . 3548) (3249 . 3548)) nil (25683 55970 653302 343000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3548) (undo-tree-id6 . -1)) nil (25683 55970 653300 771000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3547) (undo-tree-id4 . -1) (undo-tree-id5 . -1)) nil (25683 55970 653296 793000) 0 nil])
([nil nil ((3548 . 3549) (3249 . 3250) (t 25683 55970 654594 735000)) nil (25683 55974 941903 469000) 0 nil])
([nil nil ((#("class=\"w-1/2\"" 0 5 (face markdown-html-attr-name-face fontified t) 5 6 (face markdown-html-tag-delimiter-face fontified t) 6 13 (face markdown-html-attr-value-face fontified t)) . 3560) (undo-tree-id40 . -12) (undo-tree-id41 . -12) (undo-tree-id42 . -12) (undo-tree-id43 . -12) (undo-tree-id44 . -11) (undo-tree-id45 . -9) (undo-tree-id46 . -12) (undo-tree-id47 . -10) (undo-tree-id48 . -13) (undo-tree-id49 . -11) (undo-tree-id50 . -12) (undo-tree-id51 . -13) 3572 (t 25683 55974 942562 367000)) nil (25683 55991 615921 160000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3559) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) 3560) nil (25683 55991 615910 510000) 0 nil])
([nil nil ((#("#" 0 1 (face markdown-header-delimiter-face fontified t markdown-heading-2-atx (3683 3696 nil nil nil nil nil nil 3683 3686 3686 3696 3696 3696 #<buffer slides.md>) markdown-heading (3683 3696 nil nil nil nil nil nil 3683 3686 3686 3696 3696 3696 #<buffer slides.md>))) . -3683) (undo-tree-id52 . -1) (undo-tree-id53 . -1) 3684 (t 25683 55991 614436 561000)) nil (25683 56191 837862 769000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3817 . 3818) (#("
" 0 1 (fontified nil font-lock-multiline t)) . -3830) (3817 . 3831)) nil (25683 56191 837853 933000) 0 nil])
([nil nil ((3831 . 3832)) nil (25683 56191 837853 201000) 0 nil])
([nil nil ((3837 . 3838) (3830 . 3837)) nil (25683 56191 837852 590000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3960 . 3961) (#("
" 0 1 (fontified nil font-lock-multiline t)) . -3981) (3960 . 3982)) nil (25683 56191 837851 658000) 0 nil])
([nil nil ((3982 . 3983)) nil (25683 56191 837850 757000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4103 . 4104) (#("
" 0 1 (fontified nil font-lock-multiline t)) . -4124) (4103 . 4125)) nil (25683 56191 837849 474000) 0 nil])
([nil nil ((4125 . 4126)) nil (25683 56191 837847 841000) 0 nil])
([nil nil ((4242 . 4244) (4239 . 4242)) nil (25683 56191 837844 455000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4261 . 4262) (nil fontified nil 4246 . 4262) (4246 . 4262) (#("A" 0 1 (font-lock-multiline t face markdown-header-face-1 markdown-heading-1-atx (4244 4247 nil nil nil nil nil nil 4244 4246 4246 4247 4247 4247 #<buffer slides.md>) markdown-heading (4244 4247 nil nil nil nil nil nil 4244 4246 4246 4247 4247 4247 #<buffer slides.md>) fontified t)) . -4246) (undo-tree-id54 . -1) (#("p" 0 1 (font-lock-multiline t face markdown-header-face-1 markdown-heading-1-atx (4244 4248 nil nil nil nil nil nil 4244 4246 4246 4248 4248 4248 #<buffer slides.md>) markdown-heading (4244 4248 nil nil nil nil nil nil 4244 4246 4246 4248 4248 4248 #<buffer slides.md>) fontified t)) . -4247) (undo-tree-id55 . -1) (#("p" 0 1 (font-lock-multiline t face markdown-header-face-1 markdown-heading-1-atx (4244 4249 nil nil nil nil nil nil 4244 4246 4246 4249 4249 4249 #<buffer slides.md>) markdown-heading (4244 4249 nil nil nil nil nil nil 4244 4246 4246 4249 4249 4249 #<buffer slides.md>) fontified t)) . -4248) (undo-tree-id56 . -1) (#("l" 0 1 (font-lock-multiline t face markdown-header-face-1 markdown-heading-1-atx (4244 4250 nil nil nil nil nil nil 4244 4246 4246 4250 4250 4250 #<buffer slides.md>) markdown-heading (4244 4250 nil nil nil nil nil nil 4244 4246 4246 4250 4250 4250 #<buffer slides.md>) fontified t)) . -4249) (undo-tree-id57 . -1) (#("y" 0 1 (font-lock-multiline t face markdown-header-face-1 markdown-heading-1-atx (4244 4251 nil nil nil nil nil nil 4244 4246 4246 4251 4251 4251 #<buffer slides.md>) markdown-heading (4244 4251 nil nil nil nil nil nil 4244 4246 4246 4251 4251 4251 #<buffer slides.md>) fontified t)) . -4250) (undo-tree-id58 . -1) 4251 (4246 . 4251) (#("v" 0 1 (font-lock-multiline t face markdown-header-face-1 markdown-heading-1-atx (4244 4247 nil nil nil nil nil nil 4244 4246 4246 4247 4247 4247 #<buffer slides.md>) markdown-heading (4244 4247 nil nil nil nil nil nil 4244 4246 4246 4247 4247 4247 #<buffer slides.md>) fontified t)) . -4246) (undo-tree-id59 . -1) 4247 (4244 . 4247) (t 25683 56191 836937 370000)) nil (25683 58705 149919 28000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4183 . 4184) (nil fontified nil 3682 . 4184) (3682 . 4184)) nil (25683 58705 149906 935000) 0 nil])
([nil nil ((4184 . 4185)) nil (25683 58705 149906 24000) 0 nil])
([nil nil ((3714 . 3722)) nil (25683 58705 149905 493000) 0 nil])
([nil nil ((3335 . 3337)) nil (25683 58705 149904 952000) 0 nil])
([nil nil ((3450 . 3452)) nil (25683 58705 149903 759000) 0 nil])
([nil nil ((4777 . 4778) 3451) nil (25683 58705 149900 213000) 0 nil])
([nil nil ((1433 . 1444) (1432 . 1434) (t 25683 58705 149001 200000)) nil (25683 58809 752661 366000) 0 nil])
([nil nil ((1433 . 1435)) nil (25683 58809 752660 203000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1444 . 1445) (nil fontified nil 1434 . 1445) (1434 . 1445) 1433) nil (25683 58809 752658 741000) 0 nil])
([nil nil ((1452 . 1453) (#("r" 0 1 (fontified t)) . -1452) (undo-tree-id60 . -1) (undo-tree-id61 . -1) 1453 (#(" " 0 1 (fontified t)) . -1433) (undo-tree-id62 . -1) (undo-tree-id63 . 1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) 1434 (1434 . 1435) (#("p" 0 1 (fontified t)) . -1434) (undo-tree-id67 . -1) (undo-tree-id68 . -1) 1435 (1445 . 1449)) nil (25683 58809 752654 92000) 0 nil])
([nil nil ((1836 . 1837) (1825 . 1834) (1820 . 1825) (1820 . 1824) (#("#" 0 1 (fontified t)) . -1820) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (#("#" 0 1 (fontified t)) . -1821) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (#("#" 0 1 (fontified t)) . -1822) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (#("#" 0 1 (fontified t)) . -1823) (undo-tree-id75 . -1) (undo-tree-id76 . -1) 1824 (1820 . 1824) (1819 . 1821) (t 25683 58809 752187 126000)) nil (25683 58849 754700 646000) 0 nil])
([nil nil ((#("Fine-tuning = " 0 14 (fontified t)) . 1820) (undo-tree-id81 . -13) (undo-tree-id82 . -13) (undo-tree-id83 . -13) (undo-tree-id84 . -13) (undo-tree-id85 . -14) (undo-tree-id86 . -13) (undo-tree-id87 . -14) (t 25683 58849 751876 982000)) nil (25683 58877 150496 438000) 0 nil])
([nil nil ((1835 . 1841) (1822 . 1835) (#("A" 0 1 (fontified t)) . -1822) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) 1823) nil (25683 58877 150491 268000) 0 nil])
([nil nil ((1835 . 1838) (1830 . 1835) (1822 . 1831) (1853 . 1854) (1850 . 1853) (1849 . 1851) (1820 . 1823) (#("\\" 0 1 (face (markdown-markup-face) invisible markdown-markup fontified t)) . -1822) (undo-tree-id88 . -1) (undo-tree-id89 . -1) 1823 (1822 . 1823) (1820 . 1822) (t 25683 58877 147664 897000)) nil (25683 58965 24620 784000) 0 nil])
([nil nil ((1862 . 1872) (#("Param" 0 5 (fontified t)) . -1862) (undo-tree-id90 . -5) (undo-tree-id91 . -5) 1867 (1855 . 1867) (1850 . 1855) (1844 . 1854) (t 25683 58965 22986 272000)) nil (25683 59000 316835 403000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1897 . 1898) (#("
" 0 1 (fontified nil)) . -1953) (1897 . 1954) 1862 (t 25683 59000 318714 313000)) nil (25683 59036 177641 91000) 0 nil])
([nil nil ((#("Fine-tuning" 0 11 (fontified t)) . 1850) (undo-tree-id92 . -10) (undo-tree-id93 . -10) (undo-tree-id94 . -10) (undo-tree-id95 . -10) (undo-tree-id96 . -10) (undo-tree-id97 . -11) 1860) nil (25683 59036 177639 609000) 0 nil])
([nil nil ((1850 . 1861)) nil (25683 59036 177630 612000) 0 nil])
([nil nil ((#(" + \\Delta\\Phi" 0 3 (fontified t) 3 4 (face (markdown-markup-face) invisible markdown-markup fontified t) 4 9 (fontified t) 9 10 (face (markdown-markup-face) invisible markdown-markup fontified t) 10 13 (fontified t)) . 1882) (undo-tree-id98 . -12) (undo-tree-id99 . -12) (undo-tree-id100 . -12) (undo-tree-id101 . -12) (undo-tree-id102 . -1) (undo-tree-id103 . -2) (undo-tree-id104 . -2) (undo-tree-id105 . -2) (undo-tree-id106 . -3) (undo-tree-id107 . -1) (undo-tree-id108 . -4) (undo-tree-id109 . -2) (undo-tree-id110 . -5) (undo-tree-id111 . -3) (undo-tree-id112 . -6) (undo-tree-id113 . -4) (undo-tree-id114 . -7) (undo-tree-id115 . -5) (undo-tree-id116 . -8) (undo-tree-id117 . -6) (undo-tree-id118 . -9) (undo-tree-id119 . -7) (undo-tree-id120 . -10) (undo-tree-id121 . -8) (undo-tree-id122 . -11) (undo-tree-id123 . -9) (undo-tree-id124 . -12) (undo-tree-id125 . -10) (undo-tree-id126 . -13) (undo-tree-id127 . -11) (undo-tree-id128 . -12) (undo-tree-id129 . -12) (undo-tree-id130 . -12) (undo-tree-id131 . -13) 1894 (t 25683 59036 174438 376000)) nil (25683 59051 51480 166000) 0 nil])
([nil nil ((#("<p class=\"text-2xl\">
" 0 1 (face markdown-html-tag-delimiter-face fontified t) 1 2 (face markdown-html-tag-name-face fontified t) 2 3 (fontified t) 3 8 (face markdown-html-attr-name-face fontified t) 8 9 (face markdown-html-tag-delimiter-face fontified t) 9 19 (face markdown-html-attr-value-face fontified t) 19 20 (face markdown-html-tag-delimiter-face fontified t) 20 21 (fontified t)) . 1820) (undo-tree-id134 . -20) (undo-tree-id135 . -19) (undo-tree-id136 . -19) (undo-tree-id137 . -21) 1839 (t 25683 59051 50323 989000)) nil (25683 59088 77487 830000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1461 . 1462) (#("
" 0 1 (fontified nil)) . -1482) (1461 . 1483)) nil (25683 59088 77483 953000) 0 nil])
([nil nil ((#("</p>
" 0 2 (face markdown-html-tag-delimiter-face fontified t) 2 3 (face markdown-html-tag-name-face fontified t) 3 4 (face markdown-html-tag-delimiter-face fontified t) 4 5 (fontified t)) . 1942) (undo-tree-id132 . -4) (undo-tree-id133 . -5)) nil (25683 59088 77482 290000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1840 . 1841) (#("
" 0 1 (fontified nil)) . -1845) (1840 . 1846)) nil (25683 59088 77472 812000) 0 nil])
([nil nil ((1483 . 1484)) nil (25683 59100 964205 35000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1432 . 1433) (#("
" 0 1 (fontified nil)) . -1453) (1432 . 1454) (t 25683 59088 78039 482000)) nil (25683 59110 54745 911000) 0 nil] [nil nil ((#("<p class=\"text-2xl\">
" 0 1 (face markdown-html-tag-delimiter-face fontified t) 1 2 (face markdown-html-tag-name-face fontified t) 2 3 (fontified t) 3 8 (face markdown-html-attr-name-face fontified t) 8 9 (face markdown-html-tag-delimiter-face fontified t) 9 19 (face markdown-html-attr-value-face fontified t) 19 20 (face markdown-html-tag-delimiter-face fontified t) 20 21 (fontified t)) . 1462) (undo-tree-id138 . -20) (undo-tree-id139 . -21) (t 25683 59088 78039 482000)) ((1462 . 1483)) (25683 59100 963977 79000) 0 nil])
([nil nil ((1483 . 1484) (1482 . 1485) (1482 . 1483)) nil (25683 59110 54742 414000) 0 nil])
nil
([nil nil ((#("2" 0 1 (face markdown-html-attr-value-face fontified t)) . -1448) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) 1449 (t 25683 59110 53870 779000)) nil (25683 59114 730666 808000) 0 nil])
([nil nil ((#("$$\\text{Pre-trained parameters} = \\Phi_0$$
$$\\text{Fine-tuning parameters} = \\Phi_0 + \\Delta\\Phi$$

" 0 2 (fontified t) 2 3 (fontified t face (markdown-markup-face) invisible markdown-markup) 3 20 (fontified t) 20 30 (fontified t) 30 34 (fontified t) 34 35 (fontified t face (markdown-markup-face) invisible markdown-markup) 35 40 (fontified t) 40 42 (fontified t) 42 43 (fontified t) 43 45 (fontified t) 45 46 (fontified t face (markdown-markup-face) invisible markdown-markup) 46 63 (fontified t) 63 73 (fontified t) 73 77 (fontified t) 77 78 (fontified t face (markdown-markup-face) invisible markdown-markup) 78 86 (fontified t) 86 87 (fontified t face (markdown-markup-face) invisible markdown-markup) 87 92 (fontified t) 92 93 (fontified t face (markdown-markup-face) invisible markdown-markup) 93 96 (fontified t) 96 98 (fontified t) 98 99 (fontified t) 99 100 (fontified t)) . 1873) (undo-tree-id152 . -99) (undo-tree-id153 . -99) (undo-tree-id154 . -99) (undo-tree-id155 . -99) (undo-tree-id156 . -99) (undo-tree-id157 . -99) (undo-tree-id158 . -100) 1972 (t 25683 59114 729834 899000)) nil (25683 59124 748674 689000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1872) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) 1873) nil (25683 59124 748665 361000) 0 nil])
([nil nil ((3634 . 3636) (t 25683 59124 749758 21000)) nil (25683 59165 20095 140000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3734 . 3735) (nil fontified nil 3635 . 3735) (3635 . 3735)) nil (25683 59165 20094 248000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3735) (undo-tree-id159 . -1)) nil (25683 59165 20093 36000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1923 . 1924) (#("
" 0 1 (fontified nil)) . -1944) (1923 . 1945)) nil (25683 59165 20084 480000) 0 nil])
([nil nil ((2057 . 2058) (2053 . 2057)) nil (25683 59165 20080 332000) 0 nil])
([nil nil ((2112 . 2113) (t 25683 59165 17449 281000)) nil (25683 59185 514733 705000) 0 nil])
([nil nil ((2433 . 2438) (t 25683 59187 9280 793000)) nil (25683 59205 357092 269000) 0 nil] [nil nil ((#("2" 0 1 (face markdown-html-attr-value-face fontified t)) . -1939) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) 1940) ((1939 . 1940) (t 25683 59182 777313 214000)) (25683 59182 777468 443000) 0 nil])
([nil nil ((#("fine-tuning = " 0 14 (fontified t)) . 3364) (undo-tree-id174 . -13) (undo-tree-id175 . -13) (undo-tree-id176 . -13) (undo-tree-id177 . -14) (undo-tree-id178 . -13) (undo-tree-id179 . -6) (undo-tree-id180 . -4) (undo-tree-id181 . -5) (undo-tree-id182 . -3) (undo-tree-id183 . -4) (undo-tree-id184 . -2) (undo-tree-id185 . -3) (undo-tree-id186 . -1) (undo-tree-id187 . -2) (undo-tree-id188 . -14) (t 25683 59205 357140 291000)) nil (25683 59259 419285 806000) 0 nil])
nil
([nil nil ((3365 . 3375)) nil (25683 59259 419273 954000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3384 . 3385) (nil fontified nil 3371 . 3385) (3371 . 3385) 3370) nil (25683 59259 419272 482000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3382) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (#("=" 0 1 (fontified t)) . -3383) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (#(" " 0 1 (fontified t)) . -3384) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) 3385) nil (25683 59259 419268 574000) 0 nil])
([nil nil ((#("W" 0 1 (fontified t)) . -3415) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (#("+" 0 1 (fontified t)) . -3416) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (#("W" 0 1 (fontified t)) . -3417) (undo-tree-id242 . -1) (undo-tree-id243 . -1) 3418 (nil rear-nonsticky nil 3417 . 3418) (nil fontified nil 3364 . 3418) (3364 . 3418) (3363 . 3364) (t 25683 59259 416726 727000)) nil (25683 59399 962986 403000) 0 nil])
([nil nil ((#("\\text{fine-tuning} = " 0 1 (face (markdown-markup-face) invisible markdown-markup fontified t) 1 6 (fontified t) 6 17 (fontified t) 17 21 (fontified t)) . 3417) (undo-tree-id189 . -20) (undo-tree-id190 . -20) (undo-tree-id191 . -20) (undo-tree-id192 . -16) (undo-tree-id193 . -20) (undo-tree-id194 . -6) (undo-tree-id195 . -2) (undo-tree-id196 . -3) (undo-tree-id197 . -1) (undo-tree-id198 . -4) (undo-tree-id199 . -2) (undo-tree-id200 . -5) (undo-tree-id201 . -3) (undo-tree-id202 . -6) (undo-tree-id203 . -4) (undo-tree-id204 . -7) (undo-tree-id205 . -5) (undo-tree-id206 . -8) (undo-tree-id207 . -6) (undo-tree-id208 . -9) (undo-tree-id209 . -7) (undo-tree-id210 . -10) (undo-tree-id211 . -8) (undo-tree-id212 . -11) (undo-tree-id213 . -9) (undo-tree-id214 . -12) (undo-tree-id215 . -10) (undo-tree-id216 . -13) (undo-tree-id217 . -11) (undo-tree-id218 . -14) (undo-tree-id219 . -12) (undo-tree-id220 . -15) (undo-tree-id221 . -13) (undo-tree-id222 . -16) (undo-tree-id223 . -14) (undo-tree-id224 . -17) (undo-tree-id225 . -15) (undo-tree-id226 . -18) (undo-tree-id227 . -16) (undo-tree-id228 . -19) (undo-tree-id229 . -17) (undo-tree-id230 . -20) (undo-tree-id231 . -18) (undo-tree-id232 . -21) (undo-tree-id233 . -19) (undo-tree-id234 . -20) (undo-tree-id235 . -20) (undo-tree-id236 . -20) (undo-tree-id237 . -21) 3437) nil (25683 59399 962976 915000) 0 nil])
([nil nil ((3369 . 3376) (3365 . 3370) (3361 . 3365) (t 25683 59399 963653 366000)) nil (25683 59419 63588 699000) 0 nil])
([nil nil ((3374 . 3375) (t 25683 59419 63507 652000)) nil (25683 59424 520802 891000) 0 nil])
([nil nil ((#("`" 0 1 (face markdown-html-attr-value-face fontified t)) . -3374) (undo-tree-id244 . -1) (undo-tree-id245 . -1) 3375 (3374 . 3375) (#("2" 0 1 (face markdown-html-attr-value-face fontified t)) . -3374) (undo-tree-id246 . -1) (undo-tree-id247 . -1) 3375 (t 25683 59424 523466 13000)) nil (25683 59432 802164 568000) 0 nil])
([nil nil ((3452 . 3456) (#(" " 0 1 (face (markdown-italic-face) fontified t)) . -3452) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (#("其" 0 1 (face (markdown-italic-face) fontified t)) . -3453) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (#("中" 0 1 (face (markdown-italic-face) fontified t)) . -3454) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) 3455 (t 25683 59432 803402 876000)) nil (25683 59486 112564 882000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3402 . 3403) (nil fontified nil 3390 . 3403) (3390 . 3403) (t 25683 59446 215300 611000)) nil (25683 59490 528746 910000) 0 nil] [nil nil ((nil rear-nonsticky nil 3410 . 3411) (nil fontified nil 3390 . 3411) (3390 . 3411) (#("parameters" 0 10 (fontified t)) . 3390) (undo-tree-id261 . -9) (undo-tree-id262 . -10) (undo-tree-id263 . -9) (undo-tree-id264 . -10) (undo-tree-id265 . -9) (undo-tree-id266 . -10) (t 25683 59446 215300 611000)) ((3390 . 3400) (#("\\text{fine-tuning} = " 0 1 (face (markdown-markup-face) invisible markdown-markup fontified nil) 1 20 (fontified nil) 20 21 (rear-nonsticky nil fontified nil)) . 3390) (undo-tree-id267 . -20) (undo-tree-id268 . -20) (undo-tree-id269 . -20) (nil rear-nonsticky nil 3410 . 3411)) (25683 59486 112219 827000) 0 nil])
([nil nil ((3403 . 3404)) nil (25683 59490 528743 474000) 0 nil])
nil
([nil nil ((#("parameters " 0 10 (fontified t) 10 11 (fontified t)) . 3404) (undo-tree-id270 . -10) (undo-tree-id271 . 11) (undo-tree-id272 . -10) (undo-tree-id273 . -9) (undo-tree-id274 . -10) (undo-tree-id275 . -10) (undo-tree-id276 . -1) (undo-tree-id277 . -11) (undo-tree-id278 . -9) (undo-tree-id279 . -10) (undo-tree-id280 . -11) 3414 (t 25683 59490 530962 934000)) nil (25683 59502 446337 779000) 0 nil])
([nil nil ((3532 . 3540) (#("r" 0 1 (face (markdown-italic-face) font-lock-multiline t markdown-list-item ((3510 3747 0 2 "- " nil (3510 3512 3510 3510 3510 3511 3511 3512))) fontified t)) . -3532) (undo-tree-id281 . -1) (undo-tree-id282 . -1) 3533 (3528 . 3533) (3520 . 3528) (3513 . 3519) (3512 . 3514) (#("\\" 0 1 (markdown-list-item ((3510 3727 0 2 "- " nil (3510 3512 3510 3510 3510 3511 3511 3512))) fontified t)) . -3512) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (#("P" 0 1 (markdown-list-item ((3510 3728 0 2 "- " nil (3510 3512 3510 3510 3510 3511 3511 3512))) fontified t)) . -3513) (undo-tree-id285 . -1) (undo-tree-id286 . -1) 3514 (3510 . 3514) (3509 . 3510) (3508 . 3509) (#("a" 0 1 (fontified t)) . -3508) (undo-tree-id287 . -1) (undo-tree-id288 . -1) 3509 (3508 . 3509) (#(" " 0 1 (face (markdown-line-break-face) fontified t)) . 3508) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (t 25683 59502 446872 172000)) nil (25683 59559 933926 79000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3552 . 3553) (nil fontified nil 3540 . 3553) (3540 . 3553) 3539) nil (25683 59559 933908 506000) 0 nil])
([nil nil ((3553 . 3554)) nil (25683 59559 933904 669000) 0 nil])
([nil nil ((3554 . 3555) (t 25683 59559 934502 40000)) nil (25683 59571 879034 197000) 0 nil])
([nil nil ((3510 . 3511) (#("-" 0 1 (face markdown-list-face markdown-list-item ((3510 3554 0 2 "- " nil (3510 3512 3510 3510 3510 3511 3511 3512))) fontified t)) . -3510) (undo-tree-id292 . -1) (undo-tree-id293 . -1) 3511 (t 25683 59571 878428 672000)) nil (25683 59577 874311 12000) 0 nil])
([nil nil ((3507 . 3508) (t 25683 59577 874391 706000)) nil (25683 59586 982221 414000) 0 nil])
([nil nil ((3322 . 3327) (#("i" 0 1 (face markdown-header-face-1 markdown-heading-1-atx (3294 3323 nil nil nil nil nil nil 3294 3296 3296 3323 3323 3323 #<buffer slides.md>) markdown-heading (3294 3323 nil nil nil nil nil nil 3294 3296 3296 3323 3323 3323 #<buffer slides.md>) fontified t)) . -3322) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (#("v" 0 1 (face markdown-header-face-1 markdown-heading-1-atx (3294 3324 nil nil nil nil nil nil 3294 3296 3296 3324 3324 3324 #<buffer slides.md>) markdown-heading (3294 3324 nil nil nil nil nil nil 3294 3296 3296 3324 3324 3324 #<buffer slides.md>) fontified t)) . -3323) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (#("e" 0 1 (face markdown-header-face-1 fontified t markdown-heading-1-atx (3294 3325 nil nil nil nil nil nil 3294 3296 3296 3325 3325 3325 #<buffer slides.md>) markdown-heading (3294 3325 nil nil nil nil nil nil 3294 3296 3296 3325 3325 3325 #<buffer slides.md>))) . -3324) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) 3325 (t 25683 59586 982335 414000)) nil (25683 59646 487249 513000) 0 nil])
([nil nil ((3599 . 3600) (nil rear-nonsticky nil 3598 . 3599) (nil fontified nil 3562 . 3599) (3562 . 3599) (3559 . 3562) (3558 . 3559) (t 25683 59646 485963 142000)) nil (25683 59742 587189 111000) 0 nil])
([nil nil ((3563 . 3599) (#("OW-RANK-PARAMETRIZED UPDATE MATRICES" 0 35 (face markdown-header-face-2 markdown-heading-2-atx (3559 3599 nil nil nil nil nil nil 3559 3562 3562 3599 3599 3599 #<buffer slides.md>) markdown-heading (3559 3599 nil nil nil nil nil nil 3559 3562 3562 3599 3599 3599 #<buffer slides.md>) fontified t) 35 36 (face markdown-header-face-2 markdown-heading-2-atx (3559 3599 nil nil nil nil nil nil 3559 3562 3562 3599 3599 3599 #<buffer slides.md>) markdown-heading (3559 3599 nil nil nil nil nil nil 3559 3562 3562 3599 3599 3599 #<buffer slides.md>) fontified t)) . 3563) (t 25683 59742 585347 471000)) nil (25683 59779 726404 978000) 0 nil])
([nil nil ((3566 . 3567) (#("r" 0 1 (face markdown-header-face-2 markdown-heading-2-atx (3559 3599 nil nil nil nil nil nil 3559 3562 3562 3599 3599 3599 #<buffer slides.md>) markdown-heading (3559 3599 nil nil nil nil nil nil 3559 3562 3562 3599 3599 3599 #<buffer slides.md>) fontified t)) . 3566)) nil (25683 59779 726404 116000) 0 nil])
([nil nil ((3571 . 3572) (#("p" 0 1 (face markdown-header-face-2 markdown-heading-2-atx (3559 3599 nil nil nil nil nil nil 3559 3562 3562 3599 3599 3599 #<buffer slides.md>) markdown-heading (3559 3599 nil nil nil nil nil nil 3559 3562 3562 3599 3599 3599 #<buffer slides.md>) fontified t)) . 3571)) nil (25683 59779 726403 134000) 0 nil])
([nil nil ((3584 . 3585) (#("u" 0 1 (face markdown-header-face-2 markdown-heading-2-atx (3559 3599 nil nil nil nil nil nil 3559 3562 3562 3599 3599 3599 #<buffer slides.md>) markdown-heading (3559 3599 nil nil nil nil nil nil 3559 3562 3562 3599 3599 3599 #<buffer slides.md>) fontified t)) . 3584)) nil (25683 59779 726401 571000) 0 nil])
([nil nil ((3591 . 3592) (#("m" 0 1 (face markdown-header-face-2 markdown-heading-2-atx (3559 3599 nil nil nil nil nil nil 3559 3562 3562 3599 3599 3599 #<buffer slides.md>) markdown-heading (3559 3599 nil nil nil nil nil nil 3559 3562 3562 3599 3599 3599 #<buffer slides.md>) fontified t)) . 3591)) nil (25683 59779 726398 45000) 0 nil])
([nil nil ((3646 . 3656) (3645 . 3647) (3619 . 3630) (3633 . 3634) (nil rear-nonsticky nil 3660 . 3661) (nil fontified nil 3600 . 3661) (3600 . 3661) (3600 . 3601) (t 25683 59779 725105 334000)) nil (25683 60015 426685 971000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3780 . 3781) (nil fontified nil 3686 . 3781) (3686 . 3781) (t 25683 60015 427525 761000)) nil (25683 60157 960138 14000) 0 nil])
([nil nil ((3726 . 3730) (3720 . 3726) (3708 . 3719) (3704 . 3708) (#("t" 0 1 (fontified t)) . -3704) (undo-tree-id307 . -1) (undo-tree-id308 . -1) 3705 (3701 . 3705) (3701 . 3703) (#("i" 0 1 (fontified t)) . -3701) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (#("t" 0 1 (fontified t)) . -3702) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (#("s" 0 1 (fontified t)) . -3703) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (#(" " 0 1 (fontified t)) . -3704) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (#("u" 0 1 (fontified t)) . -3705) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (#("p" 0 1 (fontified t)) . -3706) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (#("d" 0 1 (fontified t)) . -3707) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (#("a" 0 1 (fontified t)) . -3708) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (#("t" 0 1 (fontified t)) . -3709) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (#("e" 0 1 (fontified t)) . -3710) (undo-tree-id327 . -1) (undo-tree-id328 . -1) 3711 (3686 . 3691)) nil (25683 60157 960132 865000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3826 . 3827) (nil fontified nil 3789 . 3827) (3789 . 3827) (#("W0 + ∆W = W0 + BA" 0 16 (fontified t) 16 17 (fontified t)) . 3789) (undo-tree-id329 . -16) (undo-tree-id330 . -17) (undo-tree-id331 . -17) (undo-tree-id332 . -15) (undo-tree-id333 . -17) (undo-tree-id334 . -15) (undo-tree-id335 . -16) (undo-tree-id336 . -14) (undo-tree-id337 . -15) (undo-tree-id338 . -13) (undo-tree-id339 . -14) (undo-tree-id340 . -12) (undo-tree-id341 . -13) (undo-tree-id342 . -11) (undo-tree-id343 . -12) (undo-tree-id344 . -10) (undo-tree-id345 . -11) (undo-tree-id346 . -9) (undo-tree-id347 . -10) (undo-tree-id348 . -8) (undo-tree-id349 . -9) (undo-tree-id350 . -7) (undo-tree-id351 . -8) (undo-tree-id352 . -6) (undo-tree-id353 . -7) (undo-tree-id354 . -5) (undo-tree-id355 . -6) (undo-tree-id356 . -4) (undo-tree-id357 . -5) (undo-tree-id358 . -3) (undo-tree-id359 . -4) (undo-tree-id360 . -2) (undo-tree-id361 . -3) (undo-tree-id362 . -1) (undo-tree-id363 . -2) (undo-tree-id364 . -17) (t 25683 60157 966542 745000)) nil (25683 60178 180475 239000) 0 nil])
([nil nil ((3827 . 3829) (t 25683 60178 182402 2000)) nil (25683 60188 617555 793000) 0 nil])
([nil nil ((#("LoRA decomposes the fine-tuned weight matrix $\\Delta\\Phi$ updated by fine-tuning into
" 0 46 (fontified t) 46 47 (face (markdown-markup-face) invisible markdown-markup fontified t) 47 52 (fontified t) 52 53 (face (markdown-markup-face) invisible markdown-markup fontified t) 53 56 (fontified t) 56 84 (fontified t) 84 85 (fontified t) 85 86 (fontified t)) . 3600) (undo-tree-id365 . -85) (undo-tree-id366 . -84) (undo-tree-id367 . -86) (undo-tree-id368 . -86) (undo-tree-id369 . -84) (undo-tree-id370 . -86) 3684) nil (25683 60188 617552 206000) 0 nil])
([nil nil ((#("## Low-Rank-Parametrized Update Matrices
" 0 3 (face markdown-header-delimiter-face markdown-heading-2-atx (3559 3599 nil nil nil nil nil nil 3559 3562 3562 3599 3599 3599 #<buffer slides.md>) markdown-heading (3559 3599 nil nil nil nil nil nil 3559 3562 3562 3599 3599 3599 #<buffer slides.md>) fontified t) 3 39 (face markdown-header-face-2 markdown-heading-2-atx (3559 3599 nil nil nil nil nil nil 3559 3562 3562 3599 3599 3599 #<buffer slides.md>) markdown-heading (3559 3599 nil nil nil nil nil nil 3559 3562 3562 3599 3599 3599 #<buffer slides.md>) fontified t) 39 40 (face markdown-header-face-2 markdown-heading-2-atx (3559 3599 nil nil nil nil nil nil 3559 3562 3562 3599 3599 3599 #<buffer slides.md>) markdown-heading (3559 3599 nil nil nil nil nil nil 3559 3562 3562 3599 3599 3599 #<buffer slides.md>) fontified t) 40 41 (font-lock-multiline t fontified t)) . 3559) (undo-tree-id371 . -40) (undo-tree-id372 . -39) (undo-tree-id373 . -32) (undo-tree-id374 . -41) (undo-tree-id375 . -41) (undo-tree-id376 . -41) (undo-tree-id377 . -39) (undo-tree-id378 . -41) 3598 (t 25683 60188 618329 258000)) nil (25683 60203 154821 906000) 0 nil])
([nil nil ((#("  
LoRA 將 $\\Delta\\Phi$ 分解成  $\\Delta\\Phi=\\frac{\\alpha}{r}AB^{\\top}$," 0 2 (face (markdown-line-break-face) fontified t) 2 3 (font-lock-multiline t fontified t) 3 11 (fontified t) 11 12 (face (markdown-markup-face) invisible markdown-markup fontified t) 12 17 (fontified t) 17 18 (face (markdown-markup-face) invisible markdown-markup fontified t) 18 29 (fontified t) 29 30 (face (markdown-markup-face) invisible markdown-markup fontified t) 30 35 (fontified t) 35 36 (face (markdown-markup-face) invisible markdown-markup fontified t) 36 40 (fontified t) 40 41 (face (markdown-markup-face) invisible markdown-markup fontified t) 41 46 (fontified t) 46 47 (face (markdown-markup-face) invisible markdown-markup fontified t) 47 60 (fontified t) 60 61 (face (markdown-markup-face) invisible markdown-markup fontified t) 61 67 (fontified t)) . 3700) (undo-tree-id387 . -66) (undo-tree-id388 . 65) (undo-tree-id389 . -66) (undo-tree-id390 . -39) (undo-tree-id391 . -37) (undo-tree-id392 . -38) (undo-tree-id393 . -36) (undo-tree-id394 . -37) (undo-tree-id395 . -35) (undo-tree-id396 . -36) (undo-tree-id397 . -34) (undo-tree-id398 . -35) (undo-tree-id399 . -33) (undo-tree-id400 . -34) (undo-tree-id401 . -32) (undo-tree-id402 . -34) (undo-tree-id403 . -32) (undo-tree-id404 . -35) (undo-tree-id405 . -33) (undo-tree-id406 . -36) (undo-tree-id407 . -34) (undo-tree-id408 . -37) (undo-tree-id409 . -35) (undo-tree-id410 . -38) (undo-tree-id411 . -36) (undo-tree-id412 . -39) (undo-tree-id413 . -37) (undo-tree-id414 . -40) (undo-tree-id415 . -38) (undo-tree-id416 . -41) (undo-tree-id417 . -39) (undo-tree-id418 . -42) (undo-tree-id419 . -40) (undo-tree-id420 . -43) (undo-tree-id421 . -41) (undo-tree-id422 . -44) (undo-tree-id423 . -42) (undo-tree-id424 . -45) (undo-tree-id425 . -43) (undo-tree-id426 . -46) (undo-tree-id427 . -44) (undo-tree-id428 . -47) (undo-tree-id429 . -45) (undo-tree-id430 . -48) (undo-tree-id431 . -46) (undo-tree-id432 . -49) (undo-tree-id433 . -47) (undo-tree-id434 . -50) (undo-tree-id435 . -48) (undo-tree-id436 . -51) (undo-tree-id437 . -49) (undo-tree-id438 . -52) (undo-tree-id439 . -50) (undo-tree-id440 . -53) (undo-tree-id441 . -51) (undo-tree-id442 . -54) (undo-tree-id443 . -52) (undo-tree-id444 . -55) (undo-tree-id445 . -53) (undo-tree-id446 . -56) (undo-tree-id447 . -54) (undo-tree-id448 . -57) (undo-tree-id449 . -55) (undo-tree-id450 . -58) (undo-tree-id451 . -56) (undo-tree-id452 . -59) (undo-tree-id453 . -57) (undo-tree-id454 . -60) (undo-tree-id455 . -58) (undo-tree-id456 . -61) (undo-tree-id457 . -59) (undo-tree-id458 . -62) (undo-tree-id459 . -60) (undo-tree-id460 . -63) (undo-tree-id461 . -61) (undo-tree-id462 . -64) (undo-tree-id463 . -62) (undo-tree-id464 . -65) (undo-tree-id465 . -63) (undo-tree-id466 . -66) (undo-tree-id467 . -64) (undo-tree-id468 . -67) (undo-tree-id469 . -65) (undo-tree-id470 . -66) (undo-tree-id471 . -67) (undo-tree-id472 . -67) (undo-tree-id473 . -66) (undo-tree-id474 . -4) (undo-tree-id475 . -2) (undo-tree-id476 . -3) (undo-tree-id477 . -1) (undo-tree-id478 . -2) (undo-tree-id479 . -67) (t 25683 60203 154227 784000)) nil (25683 60234 195874 87000) 0 nil])
([nil nil ((3700 . 3702) (#(" " 0 1 (fontified t)) . -3700) (undo-tree-id379 . 1) (undo-tree-id380 . 1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) 3701) nil (25683 60234 195778 879000) 0 nil])
([nil nil ((3737 . 3738) (3733 . 3737) (#("," 0 1 (fontified t)) . -3733) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (#(" " 0 1 (fontified t)) . -3734) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (#("且" 0 1 (fontified t)) . -3735) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (#(" " 0 1 (fontified t)) . -3736) (undo-tree-id486 . -1) (undo-tree-id487 . -1) 3737 (#(" " 0 1 (fontified t)) . -3701) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (#("其" 0 1 (fontified t)) . -3702) (undo-tree-id495 . 1) (undo-tree-id496 . 1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (#("中" 0 1 (fontified t)) . -3703) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) 3704 (t 25683 60234 194010 672000)) nil (25683 60252 122970 914000) 0 nil])
([nil nil ((3746 . 3747) (#("，" 0 1 (fontified t)) . -3746) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) 3747 (t 25683 60252 121885 6000)) nil (25683 60260 904518 148000) 0 nil])
([nil nil ((3446 . 3448) (#("\\" 0 1 (face (markdown-markup-face) invisible markdown-markup fontified t)) . -3446) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (#("P" 0 1 (fontified t)) . -3447) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (#("h" 0 1 (fontified t)) . -3448) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (#("i" 0 1 (fontified t)) . -3449) (undo-tree-id515 . -1) (undo-tree-id516 . -1) 3450 (3438 . 3439) (#("\\" 0 1 (face (markdown-markup-face) invisible markdown-markup fontified t)) . -3438) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (#("P" 0 1 (fontified t)) . -3439) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (#("h" 0 1 (fontified t)) . -3440) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (#("i" 0 1 (fontified t)) . -3441) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (#("_" 0 1 (face (markdown-markup-face) invisible markdown-markup fontified t)) . -3442) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (#("0" 0 1 (face (markdown-italic-face) fontified t)) . -3443) (undo-tree-id539 . -1) (undo-tree-id540 . -1) 3444 (t 25683 60260 905823 338000)) nil (25683 60291 95973 835000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3436) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) 3437 (t 25683 60291 93611 122000)) nil (25683 60301 782643 316000) 0 nil])
([nil nil ((3455 . 3456) (#("\\" 0 1 (face (markdown-markup-face) invisible markdown-markup fontified t)) . -3455) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (#("P" 0 1 (fontified t)) . -3456) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (#("h" 0 1 (fontified t)) . -3457) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (#("i" 0 1 (fontified t)) . -3458) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (#("_" 0 1 (face (markdown-markup-face) invisible markdown-markup font-lock-multiline t fontified t)) . -3459) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (#("0" 0 1 (face (markdown-italic-face) font-lock-multiline t fontified t)) . -3460) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) 3461 (3469 . 3471) (#("\\" 0 1 (invisible markdown-markup face (markdown-markup-face markdown-italic-face) font-lock-multiline t fontified t)) . -3469) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (#("P" 0 1 (face (markdown-italic-face) font-lock-multiline t fontified t)) . -3470) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (#("h" 0 1 (face (markdown-italic-face) font-lock-multiline t fontified t)) . -3471) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (#("i" 0 1 (face (markdown-italic-face) font-lock-multiline t fontified t)) . -3472) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) 3473 (t 25683 60301 781535 872000)) nil (25683 60319 182675 11000) 0 nil])
([nil nil ((3491 . 3492) (#("d" 0 1 (fontified t)) . -3491) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) 3492 (t 25683 60319 181413 225000)) nil (25683 60331 746378 594000) 0 nil])
([nil nil ((3499 . 3500) (#("\\" 0 1 (face (markdown-markup-face) invisible markdown-markup fontified t)) . -3499) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (#("P" 0 1 (fontified t)) . -3500) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (#("h" 0 1 (fontified t)) . -3501) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (#("i" 0 1 (fontified t)) . -3502) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (#("_" 0 1 (fontified t)) . -3503) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (#("0" 0 1 (fontified t)) . -3504) (undo-tree-id659 . -1) (undo-tree-id660 . -1) 3505 (3497 . 3498) (3495 . 3497) (#(" " 0 1 (fontified t)) . -3495) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (#(" " 0 1 (fontified t)) . -3496) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (#("
" 0 1 (font-lock-multiline t fontified t)) . -3497) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) 3498 (#("  " 0 1 (fontified t) 1 2 (fontified t)) . -3498) (undo-tree-id671 . -2) (undo-tree-id672 . -2) 3500 (t 25683 60331 745324 533000)) nil (25683 60351 185303 927000) 0 nil])
([nil nil ((3577 . 3579) (#("\\" 0 1 (face (markdown-markup-face) invisible markdown-markup fontified t)) . -3577) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (#("P" 0 1 (fontified t)) . -3578) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (#("h" 0 1 (fontified t)) . -3579) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (#("i" 0 1 (fontified t)) . -3580) (undo-tree-id691 . -1) (undo-tree-id692 . -1) 3581 (t 25683 60351 185187 221000)) nil (25683 60367 398027 127000) 0 nil])
([nil nil ((3645 . 3647) (#("\\" 0 1 (face (markdown-markup-face) invisible markdown-markup fontified t)) . -3645) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (#("P" 0 1 (fontified t)) . -3646) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) 3647 (#("h" 0 1 (fontified t)) . -3647) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (#("i" 0 1 (fontified t)) . -3648) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) 3649 (t 25683 60367 397072 583000)) nil (25683 60376 755642 231000) 0 nil])
([nil nil ((3665 . 3666) (#("A" 0 1 (fontified t)) . -3664) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) 3665 (t 25683 60376 753006 339000)) nil (25683 60412 94504 484000) 0 nil])
([nil nil ((3725 . 3734) (3723 . 3726) (3721 . 3722) (3714 . 3722) (3709 . 3714) (3706 . 3710) (#("," 0 1 (fontified t)) . -3705) (undo-tree-id723 . -1) (undo-tree-id724 . -1) 3706 (3705 . 3706) (3695 . 3696) (#("d" 0 1 (fontified t)) . -3695) (undo-tree-id725 . -1) (undo-tree-id726 . -1) 3696 (#("B" 0 1 (fontified t)) . -3678) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) 3679 (t 25683 60412 92755 814000)) nil (25683 60469 235555 319000) 0 nil])
([nil nil ((3752 . 3755) (3747 . 3751) (t 25683 60469 232349 613000)) nil (25683 60492 521843 552000) 0 nil])
([nil nil ((#("因此 LoRA 的可訓練參數遠比 full fine-tuning 更少，
並且在 inference 時可以將 $\\Phi_0$ 與 $AB^{\\top}$ 事先相加，就不會增加推理消耗的運算量
" 0 38 (fontified t) 38 58 (fontified t) 58 59 (face (markdown-markup-face) invisible markdown-markup fontified t) 59 62 (fontified t) 62 63 (fontified t) 63 73 (fontified t) 73 74 (face (markdown-markup-face) invisible markdown-markup fontified t) 74 98 (fontified t) 98 99 (fontified t)) . 3760) (undo-tree-id734 . -98) (undo-tree-id735 . -36) (undo-tree-id736 . -36) (undo-tree-id737 . -99) 3796 (t 25683 60492 520183 674000)) nil (25683 60508 963348 487000) 0 nil])
([nil nil ((#("$$\\text{Pre-trained parameters} = \\Phi_0$$
$$\\text{Fine-tuning parameters} = \\Phi_0 + \\Delta\\Phi$$
" 0 2 (fontified t) 2 3 (fontified t face (markdown-markup-face) invisible markdown-markup) 3 34 (fontified t) 34 35 (fontified t face (markdown-markup-face) invisible markdown-markup) 35 38 (fontified t) 38 39 (fontified t face (markdown-markup-face) invisible markdown-markup font-lock-multiline t) 39 45 (fontified t face (markdown-italic-face) font-lock-multiline t) 45 46 (fontified t invisible markdown-markup face (markdown-markup-face markdown-italic-face) font-lock-multiline t) 46 77 (fontified t face (markdown-italic-face) font-lock-multiline t) 77 78 (fontified t invisible markdown-markup face (markdown-markup-face markdown-italic-face) font-lock-multiline t) 78 81 (fontified t face (markdown-italic-face) font-lock-multiline t) 81 82 (fontified t face (markdown-markup-face) invisible markdown-markup font-lock-multiline t) 82 86 (fontified t) 86 87 (fontified t face (markdown-markup-face) invisible markdown-markup) 87 92 (fontified t) 92 93 (fontified t face (markdown-markup-face) invisible markdown-markup) 93 99 (fontified t)) . 3761) (undo-tree-id732 . -98) (undo-tree-id733 . -99)) nil (25683 60508 963344 399000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3761) (undo-tree-id731 . -1)) nil (25683 60508 963341 233000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3761) (undo-tree-id730 . -1)) nil (25683 60508 963337 166000) 0 nil])
([nil nil ((#("o" 0 1 (face markdown-header-face-1 markdown-heading-1-atx (3294 3328 nil nil nil nil nil nil 3294 3296 3296 3328 3328 3328 #<buffer slides.md>) markdown-heading (3294 3328 nil nil nil nil nil nil 3294 3296 3296 3328 3328 3328 #<buffer slides.md>) fontified t)) . -3302) (undo-tree-id740 . -1) (undo-tree-id741 . -1) 3303 (3299 . 3300) (t 25683 60508 960066 419000)) nil (25683 60534 851887 785000) 0 nil])
([nil nil ((3900 . 3901) (#("o" 0 1 (markdown-heading-1-atx (3895 3934 nil nil nil nil nil nil 3895 3897 3897 3934 3934 3934 #<buffer slides.md>) markdown-heading (3895 3934 nil nil nil nil nil nil 3895 3897 3897 3934 3934 3934 #<buffer slides.md>) face markdown-header-face-1 fontified t)) . -3902) (undo-tree-id738 . -1) (undo-tree-id739 . -1) 3903) nil (25683 60534 851881 553000) 0 nil])
([nil nil ((3923 . 3928) (#("i" 0 1 (face markdown-header-face-1 markdown-heading-1-atx (3895 3932 nil nil nil nil nil nil 3895 3897 3897 3932 3932 3932 #<buffer slides.md>) markdown-heading (3895 3932 nil nil nil nil nil nil 3895 3897 3897 3932 3932 3932 #<buffer slides.md>) fontified t)) . -3923) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (#("v" 0 1 (face markdown-header-face-1 markdown-heading-1-atx (3895 3933 nil nil nil nil nil nil 3895 3897 3897 3933 3933 3933 #<buffer slides.md>) markdown-heading (3895 3933 nil nil nil nil nil nil 3895 3897 3897 3933 3933 3933 #<buffer slides.md>) fontified t)) . -3924) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (#("e" 0 1 (face markdown-header-face-1 markdown-heading-1-atx (3895 3934 nil nil nil nil nil nil 3895 3897 3897 3934 3934 3934 #<buffer slides.md>) markdown-heading (3895 3934 nil nil nil nil nil nil 3895 3897 3897 3934 3934 3934 #<buffer slides.md>) fontified t)) . -3925) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) 3926 (t 25683 60534 847881 538000)) nil (25683 60555 358534 497000) 0 nil])
([nil nil ((3781 . 3788) (#("v" 0 1 (fontified t)) . -3781) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (#("a" 0 1 (fontified t)) . -3782) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (#("l" 0 1 (fontified t)) . -3783) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (#("u" 0 1 (fontified t)) . -3784) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (#("e" 0 1 (fontified t)) . -3785) (undo-tree-id761 . -1) (undo-tree-id762 . -1) 3786 (nil rear-nonsticky nil 3785 . 3786) (nil fontified nil 3772 . 3786) (3772 . 3786) (#("c" 0 1 (fontified t)) . -3772) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (#("o" 0 1 (fontified t)) . -3773) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (#("n" 0 1 (fontified t)) . -3774) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (#("s" 0 1 (fontified t)) . -3775) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (#("t" 0 1 (fontified t)) . -3776) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (#("r" 0 1 (fontified t)) . -3777) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (#("a" 0 1 (fontified t)) . -3778) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (#("i" 0 1 (fontified t)) . -3779) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (#("n" 0 1 (fontified t)) . -3780) (undo-tree-id779 . -1) (undo-tree-id780 . -1) 3781 (3772 . 3781) (#("const" 0 5 (fontified t)) . -3772) (undo-tree-id781 . -5) 3777 (3766 . 3777) (3759 . 3765) (3756 . 3760) (#("." 0 1 (fontified t)) . -3756) (undo-tree-id782 . -1) 3757 (t 25683 60555 355734 899000)) nil (25683 60766 666867 495000) 0 nil])
([nil nil ((3996 . 4003) (3992 . 3996) (3991 . 3993) (3990 . 3992) (#("
" 0 1 (fontified t)) . -3991) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) 3992 (3989 . 3992) (3981 . 3987) (3979 . 3981) (3971 . 3980) (3969 . 3976) (3968 . 3970) (t 25683 60766 666216 870000)) nil (25683 60878 331794 521000) 0 nil])
([nil nil ((3995 . 3996) (3992 . 3997) (#("O" 0 1 (fontified t)) . -3992) (undo-tree-id786 . -1) (undo-tree-id787 . -1) 3993 (3991 . 3993) (t 25683 60878 329410 426000)) nil (25683 60904 234931 46000) 0 nil])
([nil nil ((4006 . 4007) (3999 . 4006) (3995 . 4000) (t 25683 60904 233223 4000)) nil (25683 60926 939970 832000) 0 nil])
([nil nil ((4014 . 4016) (4008 . 4014) (t 25683 60926 941058 622000)) nil (25683 60939 482020 706000) 0 nil])
([nil nil ((#("LoRA's " 0 7 (fontified t)) . 3991) (undo-tree-id788 . -6) (undo-tree-id789 . -6) (undo-tree-id790 . -6) (undo-tree-id791 . -2) (undo-tree-id792 . -3) (undo-tree-id793 . -1) (undo-tree-id794 . -4) (undo-tree-id795 . -2) (undo-tree-id796 . -5) (undo-tree-id797 . -3) (undo-tree-id798 . -6) (undo-tree-id799 . -4) (undo-tree-id800 . -7) (undo-tree-id801 . -5) (undo-tree-id802 . -6) (undo-tree-id803 . -7) 3997) nil (25683 60939 482016 959000) 0 nil])
([nil nil ((4012 . 4013) (#("$" 0 1 (fontified t)) . -4012) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (#("W" 0 1 (fontified t)) . -4013) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (#("+" 0 1 (fontified t)) . -4014) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) 4015 (t 25683 60939 480967 803000)) nil (25683 60971 118534 931000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4092 . 4093) (nil fontified nil 4068 . 4093) (4068 . 4093) (4067 . 4069) (t 25683 60971 116738 582000)) nil (25683 61097 861175 610000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4081 . 4082) (nil fontified nil 4065 . 4082) (4065 . 4082) 4064 (t 25683 61097 859818 830000)) nil (25683 61110 820801 549000) 0 nil])
([nil nil ((3376 . 3377) (t 25683 61110 819724 669000)) nil (25683 61126 572115 332000) 0 nil])
([nil nil ((3379 . 3384) (3356 . 3357) (#("2" 0 1 (face markdown-html-attr-value-face fontified t)) . -3356) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) 3357 (t 25683 61126 571610 199000)) nil (25683 61160 96922 169000) 0 nil])
([nil nil ((3385 . 3390) (3383 . 3384) (#("=" 0 1 (face markdown-html-attr-value-face fontified t)) . -3383) (undo-tree-id816 . -1) (undo-tree-id817 . -1) 3384 (3383 . 3384)) nil (25683 61160 96918 61000) 0 nil])
([nil nil ((3830 . 3832) (3822 . 3830) (3814 . 3823) (t 25683 61160 95366 505000)) nil (25683 61180 362471 828000) 0 nil])
([nil nil ((#("<img src=https://user-images.githubusercontent.com/26186289/236153734-06cb3e73-7800-44e8-8d1e-353a0c822c5b.png />
" 0 1 (face markdown-html-tag-delimiter-face fontified t) 1 4 (face markdown-html-tag-name-face fontified t) 4 5 (fontified t) 5 8 (face markdown-html-attr-name-face fontified t) 8 9 (face markdown-html-tag-delimiter-face fontified t) 9 110 (face markdown-html-attr-value-face fontified t) 110 111 (fontified t) 111 113 (face markdown-html-tag-delimiter-face fontified t) 113 114 (fontified t)) . 4448) (undo-tree-id825 . -113) (undo-tree-id826 . -21) (undo-tree-id827 . -21) (undo-tree-id828 . -114) 4469 (t 25683 61180 363219 109000)) nil (25683 61199 56478 805000) 0 nil])
([nil nil ((#("</div>
" 0 2 (face markdown-html-tag-delimiter-face fontified t) 2 5 (face markdown-html-tag-name-face fontified t) 5 6 (face markdown-html-tag-delimiter-face fontified t) 6 7 (fontified t)) . 4449) (undo-tree-id823 . -6) (undo-tree-id824 . -7)) nil (25683 61199 56474 26000) 0 nil])
([nil nil ((#("<div class=\"grid grid-cols-2\">
" 0 1 (face markdown-html-tag-delimiter-face fontified t) 1 4 (face markdown-html-tag-name-face fontified t) 4 5 (fontified t) 5 10 (face markdown-html-attr-name-face fontified t) 10 11 (face markdown-html-tag-delimiter-face fontified t) 11 29 (face markdown-html-attr-value-face fontified t) 29 30 (face markdown-html-tag-delimiter-face fontified t) 30 31 (fontified t)) . 4062) (undo-tree-id821 . -30) (undo-tree-id822 . -31)) nil (25683 61199 56468 906000) 0 nil])
([nil nil ((4113 . 4115) (4085 . 4087) (#("-" 0 1 (font-lock-multiline t face markdown-header-rule-face markdown-heading-2-setext (4085 4112 4085 4110 nil nil 4111 4112 #<buffer slides.md>) markdown-heading (4085 4112 4085 4110 nil nil 4111 4112 #<buffer slides.md>) fontified t)) . -4111) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (#(" " 0 1 (markdown-list-item ((4111 4113 0 2 "- " nil (4111 4113 4111 4111 4111 4112 4112 4113))) fontified t)) . -4112) (undo-tree-id831 . -1) (undo-tree-id832 . -1) 4113 (4111 . 4113) (4111 . 4112) (t 25683 61199 59083 125000)) nil (25683 61223 825467 747000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4146 . 4147) (nil fontified nil 4115 . 4147) (4115 . 4147) (t 25683 61223 826902 907000)) nil (25683 61288 586151 863000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4151 . 4152) (nil fontified nil 4115 . 4152) (4115 . 4152) (4113 . 4115) (4112 . 4113)) nil (25683 61288 586147 756000) 0 nil])
([nil nil ((4254 . 4258) (4250 . 4255) (4248 . 4251) (4223 . 4224) (4221 . 4224) (4311 . 4312) (nil rear-nonsticky nil 4310 . 4311) (nil fontified nil 4190 . 4311) (4190 . 4311) (4188 . 4190) (4187 . 4188) (t 25683 61288 586431 401000)) nil (25683 61508 723069 59000) 0 nil])
([nil nil ((4187 . 4189) (t 25683 61508 720826 331000)) nil (25683 61529 517361 652000) 0 nil])
([nil nil ((#("fine-tuning = $\\Phi_0+\\Delta\\Phi$, 其中 $\\Phi_0, \\Delta\\Phi \\in \\mathbb{R}^{d\\times d}$
" 0 15 (fontified t) 15 16 (fontified t face (markdown-markup-face) invisible markdown-markup) 16 19 (fontified t) 19 20 (fontified t face (markdown-markup-face) invisible markdown-markup) 20 22 (fontified t face (markdown-italic-face)) 22 23 (fontified t invisible markdown-markup face (markdown-markup-face markdown-italic-face)) 23 28 (fontified t face (markdown-italic-face)) 28 29 (fontified t invisible markdown-markup face (markdown-markup-face markdown-italic-face)) 29 39 (fontified t face (markdown-italic-face)) 39 40 (fontified t invisible markdown-markup face (markdown-markup-face markdown-italic-face)) 40 43 (fontified t face (markdown-italic-face)) 43 44 (fontified t face (markdown-markup-face) invisible markdown-markup) 44 47 (fontified t) 47 48 (fontified t face (markdown-markup-face) invisible markdown-markup) 48 53 (fontified t) 53 54 (fontified t face (markdown-markup-face) invisible markdown-markup) 54 58 (fontified t) 58 59 (fontified t face (markdown-markup-face) invisible markdown-markup) 59 62 (fontified t) 62 63 (fontified t face (markdown-markup-face) invisible markdown-markup) 63 75 (fontified t) 75 76 (fontified t face (markdown-markup-face) invisible markdown-markup) 76 86 (fontified t)) . 4332) (undo-tree-id849 . -85) (undo-tree-id850 . -35) (undo-tree-id851 . -35) (undo-tree-id852 . -86) 4367 (t 25683 61529 516674 539000)) nil (25683 61539 363443 322000) 0 nil])
([nil nil ((#("LoRA 將 $\\Delta\\Phi$ 分解成  $\\Delta\\Phi=\\frac{\\alpha}{r}AB^{\\top}$, 其中 $AB \\in \\mathbb{R}^{d\\times r}$, 且 $r\\ll d$，
" 0 8 (fontified t) 8 9 (face (markdown-markup-face) invisible markdown-markup fontified t) 9 14 (fontified t) 14 15 (face (markdown-markup-face) invisible markdown-markup fontified t) 15 26 (fontified t) 26 27 (face (markdown-markup-face) invisible markdown-markup fontified t) 27 32 (fontified t) 32 33 (face (markdown-markup-face) invisible markdown-markup fontified t) 33 37 (fontified t) 37 38 (face (markdown-markup-face) invisible markdown-markup fontified t) 38 43 (fontified t) 43 44 (face (markdown-markup-face) invisible markdown-markup fontified t) 44 57 (fontified t) 57 58 (face (markdown-markup-face) invisible markdown-markup fontified t) 58 72 (fontified t) 72 73 (face (markdown-markup-face) invisible markdown-markup fontified t) 73 76 (fontified t) 76 77 (face (markdown-markup-face) invisible markdown-markup fontified t) 77 89 (fontified t) 89 90 (face (markdown-markup-face) invisible markdown-markup fontified t) 90 105 (fontified t) 105 106 (face (markdown-markup-face) invisible markdown-markup fontified t) 106 112 (fontified t) 112 113 (fontified t)) . 4332) (undo-tree-id844 . -112) (undo-tree-id845 . -31) (undo-tree-id846 . -112) (undo-tree-id847 . -31) (undo-tree-id848 . -113) 4363) nil (25683 61539 363439 705000) 0 nil])
([nil nil ((#("因此 LoRA 的可訓練參數遠比 full fine-tuning 更少，
" 0 37 (fontified t) 37 38 (fontified t)) . 4332) (undo-tree-id839 . -37) (undo-tree-id840 . -25) (undo-tree-id841 . -37) (undo-tree-id842 . -25) (undo-tree-id843 . -38) 4357) nil (25683 61539 363435 16000) 0 nil])
([nil nil ((#("並且在 inference 時可以將 $\\Phi_0$ 與 $AB^{\\top}$ 事先相加，就不會增加推理消耗的運算量
" 0 20 (fontified t) 20 21 (face (markdown-markup-face) invisible markdown-markup fontified t) 21 35 (fontified t) 35 36 (face (markdown-markup-face) invisible markdown-markup fontified t) 36 60 (fontified t) 60 61 (fontified t)) . 4332) (undo-tree-id834 . -60) (undo-tree-id835 . -28) (undo-tree-id836 . -60) (undo-tree-id837 . -28) (undo-tree-id838 . -61) 4360) nil (25683 61539 363428 344000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4332) (undo-tree-id833 . -1)) nil (25683 61539 363420 820000) 0 nil])
([nil nil ((4093 . 4096) (4092 . 4093) (#("<" 0 1 (markdown-list-item ((4085 4113 0 2 "- " nil (4085 4087 4085 4085 4085 4086 4086 4087))) fontified t)) . -4092) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (#("<" 0 1 (markdown-list-item ((4085 4114 0 2 "- " nil (4085 4087 4085 4085 4085 4086 4086 4087))) fontified t)) . -4093) (undo-tree-id855 . -1) (undo-tree-id856 . -1) 4094 (4095 . 4096) (4090 . 4091) (t 25683 61539 360602 678000)) nil (25683 61551 815732 984000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4288 . 4289) (nil fontified nil 4159 . 4289) (4159 . 4289) (4157 . 4159) (4156 . 4157) (t 25683 61551 812511 794000)) nil (25683 61655 527306 816000) 0 nil])
([nil nil ((#(" " 0 1 (markdown-list-item ((4117 4289 0 2 "- " nil (4117 4119 4117 4117 4117 4118 4118 4119))) fontified t)) . -4159) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) 4160) nil (25683 61655 527303 149000) 0 nil])
([nil nil ((4159 . 4160) (#("r" 0 1 (markdown-list-item ((4117 4288 0 2 "- " nil (4117 4119 4117 4117 4117 4118 4118 4119))) fontified t)) . -4159) (undo-tree-id860 . 1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) 4160 (t 25683 61655 527472 575000)) nil (25683 61659 353558 216000) 0 nil])
([nil nil ((#("由於 $r\\ll d$，LoRA 的可訓練參數遠小於全微調
" 0 5 (markdown-list-item ((4085 4116 0 2 "- " nil (4085 4087 4085 4085 4085 4086 4086 4087))) fontified t) 5 6 (face (markdown-markup-face) invisible markdown-markup markdown-list-item ((4085 4116 0 2 "- " nil (4085 4087 4085 4085 4085 4086 4086 4087))) fontified t) 6 9 (markdown-list-item ((4085 4116 0 2 "- " nil (4085 4087 4085 4085 4085 4086 4086 4087))) fontified t) 9 28 (markdown-list-item ((4085 4116 0 2 "- " nil (4085 4087 4085 4085 4085 4086 4086 4087))) fontified t) 28 29 (markdown-list-item ((4085 4116 0 2 "- " nil (4085 4087 4085 4085 4085 4086 4086 4087))) fontified t) 29 30 (font-lock-multiline t fontified t)) . 4087) (undo-tree-id864 . -29) (undo-tree-id865 . -29) (undo-tree-id866 . -29) (undo-tree-id867 . -29) (undo-tree-id868 . -30) 4116 (t 25683 61659 355433 765000)) nil (25683 61712 195175 616000) 0 nil])
([nil nil ((4169 . 4170) (nil rear-nonsticky nil 4168 . 4169) (nil fontified nil 4087 . 4169) (4087 . 4169) (4087 . 4088)) nil (25683 61712 195162 171000) 0 nil])
([nil nil ((4226 . 4233) (4214 . 4227) (4213 . 4215) (t 25683 61712 194905 81000)) nil (25683 61743 72081 743000) 0 nil])
([nil nil ((4364 . 4370)) nil (25683 61743 72079 859000) 0 nil])
([nil nil ((4370 . 4371)) nil (25683 61743 72076 793000) 0 nil])
([nil nil ((4210 . 4211) (t 25683 61743 74601 754000)) nil (25683 61749 991561 13000) 0 nil])
([nil nil ((4211 . 4212)) nil (25683 61749 991558 588000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4434 . 4435) (nil fontified nil 4413 . 4435) (4413 . 4435) 4412 (t 25683 61749 990534 344000)) nil (25683 61769 469538 413000) 0 nil])
([nil nil ((4578 . 4580) (#("m" 0 1 (markdown-list-item ((4374 4579 0 2 "- " nil (4374 4376 4374 4374 4374 4375 4375 4376))) fontified t)) . -4578) (undo-tree-id869 . -1) (undo-tree-id870 . -1) 4579 (4573 . 4579)) nil (25683 61769 469534 546000) 0 nil])
([nil nil ((#("

" 0 1 (fontified t) 1 2 (fontified t)) . 4587) (undo-tree-id887 . -1) (t 25683 61769 470345 497000)) nil (25683 61862 34540 154000) 0 nil])
([nil nil ((4635 . 4637) (4633 . 4636) (4628 . 4629) (#("i" 0 1 (markdown-list-item ((4620 4633 0 2 "- " nil (4620 4622 4620 4620 4620 4621 4621 4622))) fontified t)) . -4628) (undo-tree-id871 . -1) (undo-tree-id872 . -1) 4629 (#("0" 0 1 (markdown-list-item ((4620 4634 0 2 "- " nil (4620 4622 4620 4620 4620 4621 4621 4622))) fontified t)) . -4628) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (#("0" 0 1 (markdown-list-item ((4620 4635 0 2 "- " nil (4620 4622 4620 4620 4620 4621 4621 4622))) fontified t)) . -4629) (undo-tree-id875 . -1) (undo-tree-id876 . -1) 4630 (4627 . 4630) (#("t" 0 1 (markdown-list-item ((4620 4633 0 2 "- " nil (4620 4622 4620 4620 4620 4621 4621 4622))) fontified t)) . -4627) (undo-tree-id877 . -1) (undo-tree-id878 . -1) 4628 (4627 . 4633) (4620 . 4627) (4610 . 4611) (#("b" 0 1 (face markdown-header-face-2 markdown-heading-2-atx (4607 4619 nil nil nil nil nil nil 4607 4610 4610 4619 4619 4619 #<buffer slides.md>) markdown-heading (4607 4619 nil nil nil nil nil nil 4607 4610 4610 4619 4619 4619 #<buffer slides.md>) fontified t)) . -4610) (undo-tree-id879 . -1) (undo-tree-id880 . -1) 4611 (4619 . 4620) (4610 . 4619) (#("Baselines" 0 9 (face markdown-header-face-2 markdown-heading-2-atx (4607 4619 nil nil nil nil nil nil 4607 4610 4610 4619 4619 4619 #<buffer slides.md>) markdown-heading (4607 4619 nil nil nil nil nil nil 4607 4610 4610 4619 4619 4619 #<buffer slides.md>) fontified t)) . -4610) (undo-tree-id881 . -9) (undo-tree-id882 . -9) 4619 (4615 . 4619) (4607 . 4615) (#("b" 0 1 (fontified t)) . -4607) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (#("a" 0 1 (fontified t)) . -4608) (undo-tree-id885 . -1) (undo-tree-id886 . -1) 4609 (4607 . 4609) (4606 . 4608) (4607 . 4610) (4606 . 4608)) nil (25683 61862 34533 732000) 0 nil])
([nil nil ((#("
---
" 0 1 (fontified t) 1 4 (font-lock-multiline t face markdown-hr-face fontified t markdown-hr (4640 4643 4640 4643 #<buffer slides.md>)) 4 5 (font-lock-multiline t fontified t)) . 4639) (undo-tree-id893 . -4) (undo-tree-id894 . -3) 4642 (t 25683 61862 33467 273000)) nil (25683 61976 80954 263000) 0 nil])
([nil nil ((#("## Baselines
" 0 3 (face markdown-header-delimiter-face markdown-heading-2-atx (4607 4619 nil nil nil nil nil nil 4607 4610 4610 4619 4619 4619 #<buffer slides.md>) markdown-heading (4607 4619 nil nil nil nil nil nil 4607 4610 4610 4619 4619 4619 #<buffer slides.md>) fontified t) 3 4 (face markdown-header-face-2 markdown-heading-2-atx (4607 4619 nil nil nil nil nil nil 4607 4610 4610 4619 4619 4619 #<buffer slides.md>) markdown-heading (4607 4619 nil nil nil nil nil nil 4607 4610 4610 4619 4619 4619 #<buffer slides.md>) fontified t) 4 12 (face markdown-header-face-2 markdown-heading-2-atx (4607 4619 nil nil nil nil nil nil 4607 4610 4610 4619 4619 4619 #<buffer slides.md>) markdown-heading (4607 4619 nil nil nil nil nil nil 4607 4610 4610 4619 4619 4619 #<buffer slides.md>) fontified t) 12 13 (font-lock-multiline t fontified t)) . 4607) (undo-tree-id892 . -12)) nil (25683 61976 80951 618000) 0 nil])
([nil nil ((#("- Fine-Tuning (FT)
" 0 1 (face markdown-list-face markdown-list-item ((4607 4625 0 2 "- " nil (4607 4609 4607 4607 4607 4608 4608 4609))) fontified t) 1 18 (markdown-list-item ((4607 4625 0 2 "- " nil (4607 4609 4607 4607 4607 4608 4608 4609))) fontified t) 18 19 (font-lock-multiline t fontified t)) . 4607) (undo-tree-id889 . -18) (undo-tree-id890 . 2) (undo-tree-id891 . -16)) nil (25683 61976 80949 173000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4607) (undo-tree-id888 . 1)) nil (25683 61976 80943 523000) 0 nil])
([nil nil ((4905 . 4908) (#("1" 0 1 (face markdown-html-attr-value-face fontified t)) . -4905) (undo-tree-id895 . -1) (undo-tree-id896 . -1) 4906 (4905 . 4906) (#("1" 0 1 (face markdown-html-attr-value-face fontified t)) . -4905) (undo-tree-id897 . -1) (undo-tree-id898 . -1) 4906 (4905 . 4906) (4898 . 4906) (#(" " 0 1 (fontified t)) . -4898) (undo-tree-id899 . -1) (undo-tree-id900 . -1) 4899 (4898 . 4899) (t 25683 61976 80422 505000)) nil (25683 62023 816303 556000) 0 nil])
([nil nil ((4905 . 4907) (t 25683 62023 815995 694000)) nil (25683 62039 78216 217000) 0 nil])
([nil nil ((#("
# Experiment (cont.)

<img  src=https://user-images.githubusercontent.com/26186289/236169552-e1f7c498-3a98-4627-b1f6-1e359f55acdb.png />

---" 0 1 (fontified t) 1 3 (face markdown-header-delimiter-face fontified t markdown-heading-1-atx (4728 4748 nil nil nil nil nil nil 4728 4730 4730 4748 4748 4748 #<buffer slides.md>) markdown-heading (4728 4748 nil nil nil nil nil nil 4728 4730 4730 4748 4748 4748 #<buffer slides.md>)) 3 13 (face markdown-header-face-1 fontified t markdown-heading-1-atx (4728 4748 nil nil nil nil nil nil 4728 4730 4730 4748 4748 4748 #<buffer slides.md>) markdown-heading (4728 4748 nil nil nil nil nil nil 4728 4730 4730 4748 4748 4748 #<buffer slides.md>)) 13 21 (face markdown-header-face-1 fontified t markdown-heading-1-atx (4728 4748 nil nil nil nil nil nil 4728 4730 4730 4748 4748 4748 #<buffer slides.md>) markdown-heading (4728 4748 nil nil nil nil nil nil 4728 4730 4730 4748 4748 4748 #<buffer slides.md>)) 21 22 (font-lock-multiline t fontified t) 22 23 (fontified t) 23 24 (face markdown-html-tag-delimiter-face fontified t) 24 27 (face markdown-html-tag-name-face fontified t) 27 29 (fontified t) 29 32 (face markdown-html-attr-name-face fontified t) 32 33 (face markdown-html-tag-delimiter-face fontified t) 33 134 (face markdown-html-attr-value-face fontified t) 134 135 (fontified t) 135 137 (face markdown-html-tag-delimiter-face fontified t) 137 138 (fontified t) 138 139 (fontified t) 139 142 (font-lock-multiline t face markdown-hr-face fontified t markdown-hr (4866 4869 4866 4869 #<buffer slides.md>))) . 4727) (undo-tree-id903 . -141) (undo-tree-id904 . -141) (undo-tree-id905 . -142) (t 25683 62039 75860 371000)) nil (25683 62089 15637 358000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4727) (undo-tree-id901 . 1) (undo-tree-id902 . -1)) nil (25683 62089 15633 351000) 0 nil])
([nil nil ((4766 . 4767) (#("3" 0 1 (face markdown-html-attr-value-face fontified t)) . -4766) (undo-tree-id906 . -1) (undo-tree-id907 . -1) 4767 (4764 . 4765) (#("2" 0 1 (face markdown-html-attr-value-face fontified t)) . -4764) (undo-tree-id908 . 1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) 4765 (t 25683 62089 15421 139000)) nil (25683 62105 239749 35000) 0 nil])
([nil nil ((4769 . 4774) (4767 . 4769) (t 25683 62105 243279 539000)) nil (25683 62115 215473 418000) 0 nil])
([nil nil ((4624 . 4631) (4618 . 4619) (4623 . 4624) (4615 . 4623) (4612 . 4615) (t 25683 62115 219192 775000)) nil (25683 62143 978725 641000) 0 nil])
([nil nil ((4938 . 4942) (#("c" 0 1 (fontified t)) . -4938) (undo-tree-id914 . -1) (undo-tree-id915 . -1) 4939 (4933 . 4939) (#("!" 0 1 (fontified t)) . -4933) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (#("[" 0 1 (fontified t)) . -4934) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (#("i" 0 1 (fontified t)) . -4935) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (#("m" 0 1 (fontified t)) . -4936) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (#("a" 0 1 (fontified t)) . -4937) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (#("g" 0 1 (fontified t)) . -4938) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (#("e" 0 1 (fontified t)) . -4939) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (#("]" 0 1 (fontified t)) . -4940) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (#("(" 0 1 (fontified t face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup)) . -4941) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) 4942 (t 25683 62143 978943 642000)) nil (25683 62210 599352 765000) 0 nil])
([nil nil ((5043 . 5045) (#(")" 0 1 (font-lock-multiline t rear-nonsticky t mouse-face markdown-highlight-face face markdown-plain-url-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t)) . -5043) (undo-tree-id912 . -1) (undo-tree-id913 . -1) 5044) nil (25683 62210 599232 270000) 0 nil])
([nil nil ((5043 . 5045) (#("/" 0 1 (face markdown-html-attr-value-face fontified t)) . -5043) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) 5044 (t 25683 62210 598372 314000)) nil (25683 62218 261057 368000) 0 nil])
([nil nil ((5089 . 5090) (#("
" 0 1 (font-lock-multiline t markdown-list-item ((5048 5164 0 3 "-  " nil (5048 5051 5048 5048 5048 5049 5049 5051))) fontified t)) . 5089) (nil rear-nonsticky nil 5163 . 5164) (nil fontified nil 5050 . 5164) (5050 . 5164) (5048 . 5050) (5046 . 5048) (t 25683 62218 262307 59000)) nil (25683 62382 368674 149000) 0 nil])
([nil nil ((5056 . 5057) (#(" " 0 1 (markdown-list-item ((5048 5163 0 2 "- " nil (5048 5050 5048 5048 5048 5049 5049 5050))) fontified t)) . -5056) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) 5057 (5050 . 5051) (#("p" 0 1 (markdown-list-item ((5048 5163 0 2 "- " nil (5048 5050 5048 5048 5048 5049 5049 5050))) fontified t)) . -5050) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) 5051 (#(" " 0 1 (markdown-list-item ((5048 5164 0 3 "-  " nil (5048 5051 5048 5048 5048 5049 5049 5051))) fontified t)) . -5050) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) 5051) nil (25683 62382 368669 89000) 0 nil])
([nil nil ((5274 . 5275) (5272 . 5274) (nil rear-nonsticky nil 5271 . 5272) (nil fontified nil 5171 . 5272) (5171 . 5272) (5169 . 5171) (5166 . 5169) (5165 . 5166) (#("-" 0 1 (markdown-list-item ((5048 5166 0 2 "- " nil (5048 5050 5048 5048 5048 5049 5049 5050))) fontified t)) . -5165) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (#(" " 0 1 (markdown-list-item ((5165 5167 0 2 "- " nil (5165 5167 5165 5165 5165 5166 5166 5167))) fontified t)) . -5166) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) 5167 (5165 . 5167) (5164 . 5165) (5163 . 5164) (t 25683 62382 368930 233000)) nil (25683 62615 792529 205000) 0 nil])
([nil nil (5171) nil (25683 62615 792521 911000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t)) . -5180) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) 5181 (5176 . 5181) (5172 . 5176) (#("I" 0 1 (fontified t)) . -5172) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (#("M" 0 1 (fontified t)) . -5173) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (#("G" 0 1 (fontified t)) . -5174) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (#(" " 0 1 (fontified t)) . -5175) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) 5176 (5171 . 5176)) nil (25683 62615 792517 643000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5170 . 5171) (#("
" 0 1 (fontified nil font-lock-multiline t)) . -5191) (5170 . 5192) (t 25683 62615 795023 853000)) nil (25683 62677 903194 922000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5211 . 5212) (nil fontified nil 5196 . 5212) (5196 . 5212) (5195 . 5196) (5193 . 5195) (5192 . 5193) (5192 . 5194)) nil (25683 62677 903193 670000) 0 nil])
([nil nil ((5207 . 5212) (#("EGIME" 0 4 (face markdown-header-face-2 markdown-heading-2-atx (5193 5212 nil nil nil nil nil nil 5193 5197 5197 5212 5212 5212 #<buffer slides.md>) markdown-heading (5193 5212 nil nil nil nil nil nil 5193 5197 5197 5212 5212 5212 #<buffer slides.md>) fontified t) 4 5 (face markdown-header-face-2 markdown-heading-2-atx (5193 5212 nil nil nil nil nil nil 5193 5197 5197 5212 5212 5212 #<buffer slides.md>) markdown-heading (5193 5212 nil nil nil nil nil nil 5193 5197 5197 5212 5212 5212 #<buffer slides.md>) fontified t)) . 5207)) nil (25683 62677 903192 277000) 0 nil])
([nil nil ((5202 . 5205) (#("ATA" 0 3 (face markdown-header-face-2 markdown-heading-2-atx (5193 5212 nil nil nil nil nil nil 5193 5197 5197 5212 5212 5212 #<buffer slides.md>) markdown-heading (5193 5212 nil nil nil nil nil nil 5193 5197 5197 5212 5212 5212 #<buffer slides.md>) fontified t)) . 5202)) nil (25683 62677 903190 895000) 0 nil])
([nil nil ((5198 . 5200) (#("OW" 0 2 (face markdown-header-face-2 markdown-heading-2-atx (5193 5212 nil nil nil nil nil nil 5193 5197 5197 5212 5212 5212 #<buffer slides.md>) markdown-heading (5193 5212 nil nil nil nil nil nil 5193 5197 5197 5212 5212 5212 #<buffer slides.md>) fontified t)) . 5198)) nil (25683 62830 972469 373000) 0 nil])
([nil nil ((5219 . 5220) (nil rear-nonsticky nil 5218 . 5219) (nil fontified nil 5167 . 5219) (5167 . 5219) (5165 . 5167) (5165 . 5167) (t 25683 62832 493291 192000)) nil (25683 62983 730105 784000) 0 nil] [nil nil ((nil rear-nonsticky nil 5047 . 5048) (#("
" 0 1 (fontified nil)) . -5161) (5047 . 5162) (t 25683 62677 906524 249000)) ((#("
<img src=https://user-images.githubusercontent.com/26186289/236291183-63dfcaf3-f3d1-4418-abcb-fe882d826bdd.png />
" 0 1 (rear-nonsticky nil fontified nil) 1 2 (face markdown-html-tag-delimiter-face fontified nil) 2 5 (face markdown-html-tag-name-face fontified nil) 5 6 (fontified nil) 6 9 (face markdown-html-attr-name-face fontified nil) 9 10 (face markdown-html-tag-delimiter-face fontified nil) 10 110 (face markdown-html-attr-value-face fontified nil) 110 111 (face markdown-html-attr-value-face fontified nil) 111 112 (fontified nil) 112 113 (face markdown-html-tag-delimiter-face fontified nil) 113 114 (face markdown-html-tag-delimiter-face fontified nil) 114 115 (fontified nil)) . 5047) (undo-tree-id1039 . -1) (undo-tree-id1040 . -114) (undo-tree-id1041 . -114) (5161 . 5162) (nil rear-nonsticky nil 5047 . 5048)) (25683 62830 518612 114000) 0 nil])
([nil nil ((5213 . 5218) (5208 . 5213)) nil (25683 62983 730103 199000) 0 nil])
([nil nil ((5162 . 5163)) ((#("
" 0 1 (fontified t)) . 5162) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (t 25683 62820 957382 764000)) (25683 62820 956921 361000) 0 nil])
([nil nil ((5061 . 5065) (#("y" 0 1 (face markdown-html-attr-value-face fontified t)) . -5061) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) 5062 (5058 . 5062) (5057 . 5059) (5050 . 5057) (5237 . 5241) (5236 . 5237) (5051 . 5052) (5048 . 5051) (5047 . 5048) (t 25683 62983 728095 869000)) nil (25683 63010 354532 219000) 0 nil])
nil
([nil nil ((#("
<img class=\"w-7/8 m-auto\" src=https://user-images.githubusercontent.com/26186289/236169411-4b67768a-b68b-44fa-8a15-640c20d69f92.png />

---" 0 1 (fontified t) 1 2 (face markdown-html-tag-delimiter-face fontified t) 2 5 (face markdown-html-tag-name-face fontified t) 5 6 (fontified t) 6 11 (face markdown-html-attr-name-face fontified t) 11 12 (face markdown-html-tag-delimiter-face fontified t) 12 13 (face markdown-html-attr-value-face fontified t) 13 26 (face markdown-html-attr-value-face fontified t) 26 27 (fontified t) 27 30 (face markdown-html-attr-name-face fontified t) 30 31 (face markdown-html-tag-delimiter-face fontified t) 31 132 (face markdown-html-attr-value-face fontified t) 132 133 (fontified t) 133 135 (face markdown-html-tag-delimiter-face fontified t) 135 136 (fontified t) 136 137 (fontified t) 137 140 (font-lock-multiline t face markdown-hr-face fontified t markdown-hr (4743 4746 4743 4746 #<buffer slides.md>))) . 4606) (undo-tree-id1048 . -139) (undo-tree-id1049 . -139) (undo-tree-id1050 . -140) (t 25683 63010 351886 319000)) nil (25683 63131 940610 320000) 0 nil])
([nil nil ((#("# Experiment (cont.)
" 0 2 (markdown-heading-1-atx (4608 4628 nil nil nil nil nil nil 4608 4610 4610 4628 4628 4628 #<buffer slides.md>) markdown-heading (4608 4628 nil nil nil nil nil nil 4608 4610 4610 4628 4628 4628 #<buffer slides.md>) face markdown-header-delimiter-face fontified t) 2 12 (markdown-heading-1-atx (4608 4628 nil nil nil nil nil nil 4608 4610 4610 4628 4628 4628 #<buffer slides.md>) markdown-heading (4608 4628 nil nil nil nil nil nil 4608 4610 4610 4628 4628 4628 #<buffer slides.md>) face markdown-header-face-1 fontified t) 12 20 (markdown-heading-1-atx (4608 4628 nil nil nil nil nil nil 4608 4610 4610 4628 4628 4628 #<buffer slides.md>) markdown-heading (4608 4628 nil nil nil nil nil nil 4608 4610 4610 4628 4628 4628 #<buffer slides.md>) face markdown-header-face-1 fontified t) 20 21 (font-lock-multiline t fontified t)) . 4608) (undo-tree-id1046 . -20) (undo-tree-id1047 . -21)) nil (25683 63131 940606 964000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4607) (undo-tree-id1045 . -1)) nil (25683 63131 940604 670000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4607) (undo-tree-id1044 . -1)) nil (25683 63131 940602 686000) 0 nil])
([nil nil ((4743 . 4746) (4742 . 4744)) nil (25683 63131 940596 384000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4747 . 4748) (#("
" 0 1 (fontified nil font-lock-multiline t)) . -4768) (4747 . 4769)) nil (25683 63131 940594 180000) 0 nil])
([nil nil ((4769 . 4770)) nil (25683 63131 940590 714000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4804 . 4805) (nil fontified nil 4769 . 4805) (4769 . 4805) (4769 . 4770) (t 25683 63131 942932 440000)) nil (25683 63249 510466 392000) 0 nil])
([nil nil ((4769 . 4772)) nil (25683 63249 510465 160000) 0 nil])
([nil nil ((4772 . 4808) (#("WHAT IS THE OPTIMAL RANK r FOR LORA?" 0 35 (face markdown-header-face-2 markdown-heading-2-atx (4769 4808 nil nil nil nil nil nil 4769 4772 4772 4808 4808 4808 #<buffer slides.md>) markdown-heading (4769 4808 nil nil nil nil nil nil 4769 4772 4772 4808 4808 4808 #<buffer slides.md>) fontified t) 35 36 (face markdown-header-face-2 markdown-heading-2-atx (4769 4808 nil nil nil nil nil nil 4769 4772 4772 4808 4808 4808 #<buffer slides.md>) markdown-heading (4769 4808 nil nil nil nil nil nil 4769 4772 4772 4808 4808 4808 #<buffer slides.md>) fontified t)) . 4772) 4807) nil (25683 63249 510463 717000) 0 nil])
([nil nil ((4808 . 4809) (4807 . 4808) (#("r" 0 1 (face markdown-header-face-2 markdown-heading-2-atx (4769 4809 nil nil nil nil nil nil 4769 4772 4772 4809 4809 4809 #<buffer slides.md>) markdown-heading (4769 4809 nil nil nil nil nil nil 4769 4772 4772 4809 4809 4809 #<buffer slides.md>) fontified t)) . -4807) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (#("a" 0 1 (face markdown-header-face-2 markdown-heading-2-atx (4769 4810 nil nil nil nil nil nil 4769 4772 4772 4810 4810 4810 #<buffer slides.md>) markdown-heading (4769 4810 nil nil nil nil nil nil 4769 4772 4772 4810 4810 4810 #<buffer slides.md>) fontified t)) . -4808) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) 4809 (4805 . 4806) (#("l" 0 1 (face markdown-header-face-2 markdown-heading-2-atx (4769 4810 nil nil nil nil nil nil 4769 4772 4772 4810 4810 4810 #<buffer slides.md>) markdown-heading (4769 4810 nil nil nil nil nil nil 4769 4772 4772 4810 4810 4810 #<buffer slides.md>) fontified t)) . -4805) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) 4806 (4799 . 4800) (4797 . 4798) (4792 . 4793) (#("r" 0 1 (face markdown-header-face-2 markdown-heading-2-atx (4769 4808 nil nil nil nil nil nil 4769 4772 4772 4808 4808 4808 #<buffer slides.md>) markdown-heading (4769 4808 nil nil nil nil nil nil 4769 4772 4772 4808 4808 4808 #<buffer slides.md>) fontified t)) . -4792) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) 4793 (4784 . 4785) (#("I" 0 1 (face markdown-header-face-2 markdown-heading-2-atx (4769 4808 nil nil nil nil nil nil 4769 4772 4772 4808 4808 4808 #<buffer slides.md>) markdown-heading (4769 4808 nil nil nil nil nil nil 4769 4772 4772 4808 4808 4808 #<buffer slides.md>) fontified t)) . -4784) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) 4785 (4784 . 4785) (#("o" 0 1 (face markdown-header-face-2 markdown-heading-2-atx (4769 4808 nil nil nil nil nil nil 4769 4772 4772 4808 4808 4808 #<buffer slides.md>) markdown-heading (4769 4808 nil nil nil nil nil nil 4769 4772 4772 4808 4808 4808 #<buffer slides.md>) fontified t)) . -4784) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) 4785 (4772 . 4773) (#("w" 0 1 (face markdown-header-face-2 markdown-heading-2-atx (4769 4808 nil nil nil nil nil nil 4769 4772 4772 4808 4808 4808 #<buffer slides.md>) markdown-heading (4769 4808 nil nil nil nil nil nil 4769 4772 4772 4808 4808 4808 #<buffer slides.md>) fontified t)) . -4772) (undo-tree-id1069 . 1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) 4773) nil (25683 63249 510458 408000) 0 nil])
([nil nil ((#("?" 0 1 (face markdown-header-face-2 markdown-heading-2-atx (4769 4810 nil nil nil nil nil nil 4769 4772 4772 4810 4810 4810 #<buffer slides.md>) markdown-heading (4769 4810 nil nil nil nil nil nil 4769 4772 4772 4810 4810 4810 #<buffer slides.md>) fontified t)) . -4809) (undo-tree-id1103 . 1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) 4810 (t 25683 63249 514013 804000)) nil (25683 63268 775266 957000) 0 nil])
([nil nil ((#("What is " 0 1 (face markdown-header-face-2 markdown-heading-2-atx (4769 4809 nil nil nil nil nil nil 4769 4772 4772 4809 4809 4809 #<buffer slides.md>) markdown-heading (4769 4809 nil nil nil nil nil nil 4769 4772 4772 4809 4809 4809 #<buffer slides.md>) fontified t) 1 8 (face markdown-header-face-2 markdown-heading-2-atx (4769 4809 nil nil nil nil nil nil 4769 4772 4772 4809 4809 4809 #<buffer slides.md>) markdown-heading (4769 4809 nil nil nil nil nil nil 4769 4772 4772 4809 4809 4809 #<buffer slides.md>) fontified t)) . 4772) (undo-tree-id1073 . -7) (undo-tree-id1074 . -7) (undo-tree-id1075 . -1) (undo-tree-id1076 . -2) (undo-tree-id1077 . -3) (undo-tree-id1078 . -1) (undo-tree-id1079 . -4) (undo-tree-id1080 . -2) (undo-tree-id1081 . -5) (undo-tree-id1082 . -3) (undo-tree-id1083 . -6) (undo-tree-id1084 . -4) (undo-tree-id1085 . -7) (undo-tree-id1086 . -5) (undo-tree-id1087 . -8) (undo-tree-id1088 . -6) (undo-tree-id1089 . -7) (undo-tree-id1090 . -8) (undo-tree-id1091 . -8) (undo-tree-id1092 . -7) (undo-tree-id1093 . -6) (undo-tree-id1094 . -4) (undo-tree-id1095 . -5) (undo-tree-id1096 . -3) (undo-tree-id1097 . -4) (undo-tree-id1098 . -2) (undo-tree-id1099 . -3) (undo-tree-id1100 . -1) (undo-tree-id1101 . -2) (undo-tree-id1102 . -8)) nil (25683 63268 775260 84000) 0 nil])
([nil nil ((4831 . 4832) (nil rear-nonsticky nil 4830 . 4831) (nil fontified nil 4743 . 4831) (4743 . 4831) (4742 . 4744) (t 25683 63268 777863 576000)) nil (25683 63392 560594 17000) 0 nil])
([nil nil ((4767 . 4769) (#("e" 0 1 (fontified t)) . -4767) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) 4768 (4760 . 4761)) nil (25683 63392 560589 870000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -4806) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) 4807 (4803 . 4807) (#("s" 0 1 (fontified t)) . -4803) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (#("s" 0 1 (fontified t)) . -4804) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) 4805 (4798 . 4805) (#("u" 0 1 (fontified t)) . -4798) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) 4799 (4785 . 4799) (t 25683 63392 560899 972000)) nil (25683 63449 462142 791000) 0 nil])
([nil nil ((#(" are added to the attation layer" 0 31 (fontified t) 31 32 (fontified t)) . 4822) (undo-tree-id1109 . -31) (undo-tree-id1110 . -31) (undo-tree-id1111 . -31) (undo-tree-id1112 . -6) (undo-tree-id1113 . -4) (undo-tree-id1114 . -5) (undo-tree-id1115 . -3) (undo-tree-id1116 . -4) (undo-tree-id1117 . -2) (undo-tree-id1118 . -3) (undo-tree-id1119 . -1) (undo-tree-id1120 . -2) (undo-tree-id1121 . -32) (undo-tree-id1122 . -31) (undo-tree-id1123 . -31) (undo-tree-id1124 . -32) 4853) nil (25683 63449 462132 231000) 0 nil])
([nil nil ((4758 . 4765) (#(" " 0 1 (fontified t)) . -4758) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) 4759 (4749 . 4759) (4745 . 4749) (#(" " 0 1 (fontified t)) . -4744) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) 4745 (4744 . 4745) (4832 . 4833) (4829 . 4830) (4828 . 4831) (4746 . 4747) (4744 . 4746) (4743 . 4744) (t 25683 63449 460457 940000)) nil (25683 63491 723474 437000) 0 nil])
([nil nil ((4753 . 4761) (4753 . 4754) (#("\"" 0 1 (face markdown-html-attr-value-face fontified t)) . -4753) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) 4754 (4765 . 4766)) nil (25683 63491 723469 397000) 0 nil])
([nil nil ((#("2" 0 1 (face markdown-html-attr-value-face fontified t)) . -4758) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) 4759 (t 25683 63491 720129 935000)) nil (25683 63495 949354 846000) 0 nil])
([nil nil ((4742 . 4747) (4742 . 4743) (t 25683 63495 948097 122000)) nil (25683 63526 870641 523000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4748 . 4749) (#("
" 0 1 (fontified nil)) . -4754) (4748 . 4755) (t 25683 63526 871857 266000)) nil (25683 63533 258085 271000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4754 . 4755) (#("
" 0 1 (fontified nil)) . -4760) (4754 . 4761) 4749) nil (25683 63533 258083 37000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4748) (undo-tree-id1142 . -1)) nil (25683 63533 258079 560000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4747 . 4748) (#("
" 0 1 (fontified nil)) . -4748) (4747 . 4749) 4742 (t 25683 63533 255807 768000)) nil (25683 63540 225752 161000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4748) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1)) nil (25683 63540 225749 776000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4753 . 4754) (#("
" 0 1 (fontified nil)) . -4759) (4753 . 4760) 4748) nil (25683 63540 225737 283000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4759 . 4760) (#("
" 0 1 (fontified nil)) . -4765) (4759 . 4766) 4754 (t 25683 63540 223753 747000)) nil (25683 63546 351554 119000) 0 nil])
([nil nil ((#(" text-center" 0 1 (face markdown-html-attr-value-face fontified t) 1 12 (face markdown-html-attr-value-face fontified t)) . 4789) (undo-tree-id1146 . -11) (undo-tree-id1147 . -11) (undo-tree-id1148 . -11) (undo-tree-id1149 . -1) (undo-tree-id1150 . -12) (undo-tree-id1151 . -11) (undo-tree-id1152 . -12) (undo-tree-id1153 . -10) (undo-tree-id1154 . -12) (undo-tree-id1155 . -10) (undo-tree-id1156 . -11) (undo-tree-id1157 . -12) 4800 (t 25683 63546 351706 247000)) nil (25683 63558 891573 409000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4669 . 4670) (nil fontified nil 4610 . 4670) (4610 . 4670) (4607 . 4610) (4606 . 4607) (t 25683 63558 891609 54000)) nil (25683 63644 92854 249000) 0 nil])
([nil nil ((#("of LoRA and other methods " 0 26 (face markdown-header-face-2 markdown-heading-2-atx (4607 4670 nil nil nil nil nil nil 4607 4610 4610 4670 4670 4670 #<buffer slides.md>) markdown-heading (4607 4670 nil nil nil nil nil nil 4607 4610 4610 4670 4670 4670 #<buffer slides.md>) fontified t)) . 4636) (undo-tree-id1158 . -25) (undo-tree-id1159 . -25) (undo-tree-id1160 . -26) (undo-tree-id1161 . -25) (undo-tree-id1162 . -26) (undo-tree-id1163 . -24) (undo-tree-id1164 . -25) (undo-tree-id1165 . -23) (undo-tree-id1166 . -24) (undo-tree-id1167 . -22) (undo-tree-id1168 . -23) (undo-tree-id1169 . -21) (undo-tree-id1170 . -22) (undo-tree-id1171 . -20) (undo-tree-id1172 . -21) (undo-tree-id1173 . -19) (undo-tree-id1174 . -20) (undo-tree-id1175 . -18) (undo-tree-id1176 . -19) (undo-tree-id1177 . -17) (undo-tree-id1178 . -18) (undo-tree-id1179 . -16) (undo-tree-id1180 . -17) (undo-tree-id1181 . -15) (undo-tree-id1182 . -16) (undo-tree-id1183 . -14) (undo-tree-id1184 . -15) (undo-tree-id1185 . -13) (undo-tree-id1186 . -14) (undo-tree-id1187 . -12) (undo-tree-id1188 . -13) (undo-tree-id1189 . -11) (undo-tree-id1190 . -12) (undo-tree-id1191 . -10) (undo-tree-id1192 . -11) (undo-tree-id1193 . -9) (undo-tree-id1194 . -10) (undo-tree-id1195 . -8) (undo-tree-id1196 . -9) (undo-tree-id1197 . -7) (undo-tree-id1198 . -8) (undo-tree-id1199 . -6) (undo-tree-id1200 . -7) (undo-tree-id1201 . -5) (undo-tree-id1202 . -6) (undo-tree-id1203 . -4) (undo-tree-id1204 . -5) (undo-tree-id1205 . -3) (undo-tree-id1206 . -4) (undo-tree-id1207 . -2) (undo-tree-id1208 . -3) (undo-tree-id1209 . -1) (undo-tree-id1210 . -2) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -26)) nil (25683 63644 92848 358000) 0 nil])
([nil nil ((4644 . 4645) (t 25683 63644 95003 286000)) nil (25683 63649 102725 564000) 0 nil])
([nil nil ((#("<br/>
" 0 1 (face markdown-html-tag-delimiter-face fontified t) 1 3 (face markdown-html-tag-name-face fontified t) 3 5 (face markdown-html-tag-delimiter-face fontified t) 5 6 (fontified t)) . 4781) (undo-tree-id1214 . -5) (undo-tree-id1215 . -6) (t 25683 63649 102972 719000)) nil (25683 63659 906644 268000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4645 . 4646) (#("
" 0 1 (fontified nil)) . -4651) (4645 . 4652)) nil (25683 63659 906632 576000) 0 nil])
([nil nil ((#("<br/>
" 0 1 (face markdown-html-tag-delimiter-face fontified t) 1 3 (face markdown-html-tag-name-face fontified t) 3 5 (face markdown-html-tag-delimiter-face fontified t) 5 6 (fontified t)) . 4793) (undo-tree-id1216 . -5) (undo-tree-id1217 . -6) (t 25683 63659 906906 497000)) nil (25683 63662 605033 565000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4971) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) 4972 (nil rear-nonsticky nil 5216 . 5217) (nil fontified nil 4972 . 5217) (4972 . 5217) (4971 . 4973) (t 25683 63662 606889 907000)) nil (25683 63822 140882 788000) 0 nil])
([nil nil ((#("## the Optimal Rank $r$ for LoRA
" 0 3 (face markdown-header-delimiter-face fontified t markdown-heading-2-atx (4938 4970 nil nil nil nil nil nil 4938 4941 4941 4970 4970 4970 #<buffer slides.md>) markdown-heading (4938 4970 nil nil nil nil nil nil 4938 4941 4941 4970 4970 4970 #<buffer slides.md>)) 3 32 (face markdown-header-face-2 fontified t markdown-heading-2-atx (4938 4970 nil nil nil nil nil nil 4938 4941 4941 4970 4970 4970 #<buffer slides.md>) markdown-heading (4938 4970 nil nil nil nil nil nil 4938 4941 4941 4970 4970 4970 #<buffer slides.md>)) 32 33 (font-lock-multiline t fontified t)) . 4938) (undo-tree-id1222 . -32) (undo-tree-id1223 . -33) (undo-tree-id1224 . -33) (undo-tree-id1225 . -3) (undo-tree-id1226 . -33) (t 25683 63822 141878 151000)) nil (25683 63860 640351 279000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4916 . 4917) (#("
" 0 1 (fontified nil font-lock-multiline t)) . -4949) (4916 . 4950)) nil (25683 63860 640340 449000) 0 nil])
([nil nil ((4955 . 4956) (4950 . 4951) (4950 . 4953) (4950 . 4951)) nil (25683 63860 640337 13000) 0 nil])
([nil nil ((#("![image](" 0 1 (fontified t face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup) 1 2 (fontified t face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup) 2 7 (fontified t face markdown-link-face help-echo "https://user-images.githubusercontent.com/26186289/236295528-7f29a925-481b-47ad-9bad-13ebda4cd1a4.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face))) 7 8 (fontified t face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup) 8 9 (fontified t face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup)) . 4988) (undo-tree-id1229 . -8) (undo-tree-id1230 . -8) (undo-tree-id1231 . -8) (undo-tree-id1232 . -1) (undo-tree-id1233 . -8) (undo-tree-id1234 . -8) (undo-tree-id1235 . -9) 4996 (t 25683 63860 641625 990000)) nil (25683 63887 383893 561000) 0 nil])
([nil nil ((4988 . 4997)) nil (25683 63887 383853 626000) 0 nil])
([nil nil ((5098 . 5101) (#(")" 0 1 (font-lock-multiline t rear-nonsticky t mouse-face markdown-highlight-face face markdown-plain-url-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t)) . -5098) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) 5099) nil (25683 63887 383850 461000) 0 nil])
([nil nil ((5001 . 5004) (#("1" 0 1 (face markdown-html-attr-value-face fontified t)) . -5001) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (#("/" 0 1 (face markdown-html-attr-value-face fontified t)) . -5002) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) 5003 (4992 . 5003) (t 25683 63887 385449 269000)) nil (25683 63903 140829 338000) 0 nil])
([nil nil ((4999 . 5000) (5006 . 5011) (5004 . 5006) (5001 . 5005) (#("2" 0 1 (face markdown-html-attr-value-face fontified t)) . -5001) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (#("/" 0 1 (face markdown-html-attr-value-face fontified t)) . -5002) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (#("3" 0 1 (face markdown-html-attr-value-face fontified t)) . -5003) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) 5004 (t 25683 63903 141344 567000)) nil (25683 63915 468497 810000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5163 . 5164) (nil fontified nil 5134 . 5164) (5134 . 5164) (#("![image](" 0 1 (fontified t face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup) 1 2 (fontified t face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup) 2 7 (fontified t face markdown-link-face help-echo "https://user-images.githubusercontent.com/26186289/236295691-d9527bb9-575d-4f07-b626-739ca80d3b1c.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face))) 7 8 (fontified t face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup) 8 9 (fontified t face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup)) . 5134) (undo-tree-id1252 . -8) (undo-tree-id1253 . -9) (undo-tree-id1254 . -8) (undo-tree-id1255 . -9) (undo-tree-id1256 . -1) (undo-tree-id1257 . -8) (undo-tree-id1258 . -9) (undo-tree-id1259 . -9) 5143 (t 25683 63915 469262 390000)) nil (25683 63943 967035 15000) 0 nil])
([nil nil ((5265 . 5268) (#(")" 0 1 (font-lock-multiline t rear-nonsticky t mouse-face markdown-highlight-face face markdown-plain-url-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t)) . -5265) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) 5266) nil (25683 63943 966990 132000) 0 nil])
([nil nil ((#("---
" 0 2 (font-lock-multiline t face markdown-hr-face markdown-hr (4951 4954 4951 4954 #<buffer slides.md>) fontified t) 2 3 (face markdown-hr-face font-lock-multiline t markdown-hr (4951 4954 4951 4954 #<buffer slides.md>) fontified t) 3 4 (font-lock-multiline t fontified t)) . 4951) (undo-tree-id1269 . -3) (undo-tree-id1270 . -2) (undo-tree-id1271 . -2) (undo-tree-id1272 . -4) 4953 (t 25683 63943 965071 465000)) nil (25683 63965 248413 657000) 0 nil])
([nil nil ((#("# Experiment (cont.)
" 0 1 (font-lock-multiline t markdown-heading-1-atx (4952 4972 nil nil nil nil nil nil 4952 4954 4954 4972 4972 4972 #<buffer slides.md>) markdown-heading (4952 4972 nil nil nil nil nil nil 4952 4954 4954 4972 4972 4972 #<buffer slides.md>) face markdown-header-rule-face fontified t) 1 2 (font-lock-multiline t markdown-heading-1-atx (4952 4972 nil nil nil nil nil nil 4952 4954 4954 4972 4972 4972 #<buffer slides.md>) markdown-heading (4952 4972 nil nil nil nil nil nil 4952 4954 4954 4972 4972 4972 #<buffer slides.md>) face markdown-header-delimiter-face fontified t) 2 12 (markdown-heading-1-atx (4952 4972 nil nil nil nil nil nil 4952 4954 4954 4972 4972 4972 #<buffer slides.md>) markdown-heading (4952 4972 nil nil nil nil nil nil 4952 4954 4954 4972 4972 4972 #<buffer slides.md>) face markdown-header-face-1 fontified t) 12 20 (markdown-heading-1-atx (4952 4972 nil nil nil nil nil nil 4952 4954 4954 4972 4972 4972 #<buffer slides.md>) markdown-heading (4952 4972 nil nil nil nil nil nil 4952 4954 4954 4972 4972 4972 #<buffer slides.md>) face markdown-header-face-1 fontified t) 20 21 (font-lock-multiline t fontified t)) . 4952) (undo-tree-id1265 . -20) (undo-tree-id1266 . -20) (undo-tree-id1267 . -21) (undo-tree-id1268 . -21)) nil (25683 63965 248409 599000) 0 nil])
([nil nil ((#("
" 0 1 (font-lock-multiline t face markdown-header-rule-face fontified t)) . 4951) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1)) nil (25683 63965 248405 111000) 0 nil])
([nil nil ((#("
" 0 1 (font-lock-multiline t face markdown-header-rule-face fontified t)) . 4951) (undo-tree-id1260 . -1)) nil (25683 63965 248397 908000) 0 nil])
([nil nil ((5902 . 5907) (nil rear-nonsticky nil 5901 . 5902) (nil fontified nil 5759 . 5902) (5759 . 5902) (5758 . 5760) (t 25683 63965 248928 47000)) nil (25683 64442 396957 607000) 0 nil])
([nil nil ((5769 . 5776) (5761 . 5770) (5762 . 5763) (5760 . 5762) (5759 . 5760)) nil (25683 64442 396955 493000) 0 nil])
([nil nil ((5923 . 5924)) nil (25683 64442 396951 595000) 0 nil])
([nil nil ((5774 . 5775) (t 25683 64442 397579 929000)) nil (25683 64452 815186 163000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6007 . 6008) (nil fontified nil 5972 . 6008) (5972 . 6008) (5970 . 5973) (5958 . 5959) (nil rear-nonsticky nil 5968 . 5969) (nil fontified nil 5958 . 5969) (5958 . 5969) (5956 . 5958) (5954 . 5956) (t 25683 64452 817504 776000)) nil (25683 64772 213209 753000) 0 nil])
([nil nil ((6020 . 6021) (6016 . 6017) (6016 . 6019) (6015 . 6016) (5957 . 5958) (5957 . 5958) (#("s" 0 1 (fontified t)) . -5957) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (#("p" 0 1 (fontified t)) . -5958) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (#("a" 0 1 (fontified t)) . -5959) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (#("n" 0 1 (fontified t)) . -5960) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (#("/" 0 1 (fontified t)) . -5961) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) 5962 (5956 . 5962) (5955 . 5957) (#("<" 0 1 (markdown-list-item ((5956 6010 0 2 "- " nil (5956 5958 5956 5956 5956 5957 5957 5958))) fontified t)) . -5958) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (#("s" 0 1 (markdown-list-item ((5956 6011 0 2 "- " nil (5956 5958 5956 5956 5956 5957 5957 5958))) fontified t)) . -5959) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) 5960 (5958 . 5960) (t 25683 64772 215176 493000)) nil (25683 64826 920823 90000) 0 nil])
([nil nil ((5970 . 5973) (5958 . 5970) (t 25683 64814 230867 440000)) nil (25683 64838 260175 687000) 0 nil] [nil nil ((#("</p>
" 0 1 (face markdown-html-tag-delimiter-face fontified t) 1 2 (face markdown-html-tag-delimiter-face fontified t) 2 3 (face markdown-html-tag-name-face fontified t) 3 4 (face markdown-html-tag-delimiter-face fontified t) 4 5 (fontified t)) . 6016) (undo-tree-id1287 . -4) (undo-tree-id1288 . -5) (undo-tree-id1289 . -5) (undo-tree-id1290 . -5) (undo-tree-id1291 . -5) (t 25683 64814 230867 440000)) ((6016 . 6021)) (25683 64826 920586 849000) 0 nil])
([nil nil ((6030 . 6032) (6030 . 6031) (t 25683 64838 262690 434000)) nil (25683 65005 21617 151000) 0 nil])
nil
([nil nil ((#("
# Recent use cases

<p class=text-2xl>

- [Alpaca-LoRA](https://github.com/tloen/alpaca-lora)
- 

</p>" 0 1 (fontified t) 1 2 (face markdown-header-delimiter-face markdown-heading-1-atx (5936 5954 nil nil nil nil nil nil 5936 5938 5938 5954 5954 5954 #<buffer slides.md>) markdown-heading (5936 5954 nil nil nil nil nil nil 5936 5938 5938 5954 5954 5954 #<buffer slides.md>) fontified t) 2 3 (face markdown-header-delimiter-face markdown-heading-1-atx (5936 5954 nil nil nil nil nil nil 5936 5938 5938 5954 5954 5954 #<buffer slides.md>) markdown-heading (5936 5954 nil nil nil nil nil nil 5936 5938 5938 5954 5954 5954 #<buffer slides.md>) fontified t) 3 18 (face markdown-header-face-1 markdown-heading-1-atx (5936 5954 nil nil nil nil nil nil 5936 5938 5938 5954 5954 5954 #<buffer slides.md>) markdown-heading (5936 5954 nil nil nil nil nil nil 5936 5938 5938 5954 5954 5954 #<buffer slides.md>) fontified t) 18 19 (face markdown-header-face-1 markdown-heading-1-atx (5936 5954 nil nil nil nil nil nil 5936 5938 5938 5954 5954 5954 #<buffer slides.md>) markdown-heading (5936 5954 nil nil nil nil nil nil 5936 5938 5938 5954 5954 5954 #<buffer slides.md>) fontified t) 19 20 (font-lock-multiline t fontified t) 20 21 (fontified t) 21 22 (face markdown-html-tag-delimiter-face fontified t) 22 23 (face markdown-html-tag-name-face fontified t) 23 24 (fontified t) 24 29 (face markdown-html-attr-name-face fontified t) 29 30 (face markdown-html-tag-delimiter-face fontified t) 30 38 (face markdown-html-attr-value-face fontified t) 38 39 (face markdown-html-tag-delimiter-face fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (face markdown-list-face markdown-list-item ((5976 6032 0 2 "- " nil (5976 5978 5976 5976 5976 5977 5977 5978))) fontified t) 42 43 (markdown-list-item ((5976 6032 0 2 "- " nil (5976 5978 5976 5976 5976 5977 5977 5978))) fontified t) 43 44 (face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup markdown-list-item ((5976 6032 0 2 "- " nil (5976 5978 5976 5976 5976 5977 5977 5978))) fontified t) 44 54 (face markdown-link-face help-echo "https://github.com/tloen/alpaca-lora" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) markdown-list-item ((5976 6032 0 2 "- " nil (5976 5978 5976 5976 5976 5977 5977 5978))) fontified t) 54 55 (face markdown-link-face help-echo "https://github.com/tloen/alpaca-lora" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) markdown-list-item ((5976 6032 0 2 "- " nil (5976 5978 5976 5976 5976 5977 5977 5978))) fontified t) 55 56 (face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup markdown-list-item ((5976 6032 0 2 "- " nil (5976 5978 5976 5976 5976 5977 5977 5978))) fontified t) 56 57 (face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup markdown-list-item ((5976 6032 0 2 "- " nil (5976 5978 5976 5976 5976 5977 5977 5978))) fontified t) 57 92 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) markdown-list-item ((5976 6032 0 2 "- " nil (5976 5978 5976 5976 5976 5977 5977 5978))) fontified t) 92 93 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) markdown-list-item ((5976 6032 0 2 "- " nil (5976 5978 5976 5976 5976 5977 5977 5978))) fontified t) 93 94 (face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup markdown-list-item ((5976 6032 0 2 "- " nil (5976 5978 5976 5976 5976 5977 5977 5978))) fontified t) 94 95 (font-lock-multiline t markdown-list-item ((5976 6032 0 2 "- " nil (5976 5978 5976 5976 5976 5977 5977 5978))) fontified t) 95 96 (face markdown-list-face markdown-list-item ((6030 6032 0 2 "- " nil (6030 6032 6030 6030 6030 6031 6031 6032))) fontified t) 96 97 (markdown-list-item ((6030 6032 0 2 "- " nil (6030 6032 6030 6030 6030 6031 6031 6032))) fontified t) 97 98 (font-lock-multiline t fontified t) 98 99 (fontified t) 99 100 (face markdown-html-tag-delimiter-face fontified t) 100 101 (face markdown-html-tag-delimiter-face fontified t) 101 102 (face markdown-html-tag-name-face fontified t) 102 103 (face markdown-html-tag-delimiter-face fontified t)) . 5935) (undo-tree-id1292 . -102) (undo-tree-id1293 . 6) (undo-tree-id1294 . -102) (undo-tree-id1295 . -37) (undo-tree-id1296 . -43) (undo-tree-id1297 . -41) (undo-tree-id1298 . -95) (undo-tree-id1299 . -41) (undo-tree-id1300 . -98) (undo-tree-id1301 . -102) (undo-tree-id1302 . -100) (undo-tree-id1303 . -103) (undo-tree-id1304 . -101) (undo-tree-id1305 . -103)) nil (25683 65005 21613 353000) 0 nil])
([nil nil ((5951 . 5952) (5950 . 5951) (5949 . 5950) (5940 . 5949) (#("l" 0 1 (face markdown-header-face-1 markdown-heading-1-atx (5936 5941 nil nil nil nil nil nil 5936 5938 5938 5941 5941 5941 #<buffer slides.md>) markdown-heading (5936 5941 nil nil nil nil nil nil 5936 5938 5938 5941 5941 5941 #<buffer slides.md>) fontified t)) . -5940) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) 5941 (5936 . 5941) (5935 . 5936) (t 25683 65005 21458 219000)) nil (25683 65249 475268 270000) 0 nil])
([nil nil ((5664 . 5667) (5655 . 5664) (5647 . 5656) (#(" " 0 1 (face markdown-header-delimiter-face markdown-heading-2-atx (5623 5642 nil nil nil nil nil nil 5623 5627 5627 5642 5642 5642 #<buffer slides.md>) markdown-heading (5623 5642 nil nil nil nil nil nil 5623 5627 5627 5642 5642 5642 #<buffer slides.md>) fontified t)) . -5625) (undo-tree-id1306 . -1) 5626) nil (25683 65249 475262 89000) 0 nil])
([nil nil ((5666 . 5667) (#("4" 0 1 (face markdown-html-attr-value-face fontified t)) . -5666) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) 5667 (5664 . 5665) (#("3" 0 1 (face markdown-html-attr-value-face fontified t)) . -5664) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) 5665 (t 25683 65249 479642 772000)) nil (25683 65261 261565 555000) 0 nil])
([nil nil ((#("2" 0 1 (face markdown-html-attr-value-face fontified t)) . -5794) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) 5795 (t 25683 65261 263555 64000)) nil (25683 65274 458626 800000) 0 nil])
([nil nil ((6134 . 6135) (6130 . 6132) (nil rear-nonsticky nil 6129 . 6130) (nil fontified nil 5970 . 6130) (5970 . 6130) (5969 . 5970) (t 25683 65274 459456 833000)) nil (25684 182 23004 612000) 0 nil])
([nil nil ((6019 . 6020) (6017 . 6019)) nil (25684 182 23001 947000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6020 . 6021) (#("
" 0 1 (fontified nil)) . -6040) (6020 . 6041) (t 25684 182 20450 972000)) nil (25684 204 818207 887000) 0 nil])
([nil nil ((6041 . 6042) (6160 . 6164) (6159 . 6160)) nil (25684 204 818206 234000) 0 nil])
([nil nil ((6165 . 6166) 6042) nil (25684 215 848019 711000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5969 . 5970) (#("
" 0 1 (fontified nil)) . -5989) (5969 . 5990) (t 25684 217 112358 967000)) nil (25684 227 858105 382000) 0 nil] [nil nil ((6036 . 6037) (t 25684 204 820392 360000)) ((#("2" 0 1 (face markdown-html-attr-value-face fontified t)) . 6036) (t 25684 210 840376 168000)) (25684 210 838355 701000) 0 nil])
([nil nil ((6041 . 6044) (#("?" 0 1 (fontified t)) . -6041) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) 6042 (6040 . 6042) (6040 . 6041)) nil (25684 227 858101 825000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 6399 . 6400) (nil fontified nil 6298 . 6400) (6298 . 6400) (6296 . 6298) (6295 . 6296) (nil rear-nonsticky nil 6294 . 6295) (nil fontified nil 6184 . 6295) (6184 . 6295) (t 25684 227 856328 771000)) nil (25684 297 795173 767000) 0 nil])
([nil nil ((6298 . 6299) (#("c" 0 1 (markdown-list-item ((6296 6400 0 2 "- " nil (6296 6298 6296 6296 6296 6297 6297 6298))) fontified t)) . -6298) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) 6299 (6184 . 6185) (#("t" 0 1 (markdown-list-item ((6182 6295 0 2 "- " nil (6182 6184 6182 6182 6182 6183 6183 6184))) fontified t)) . -6184) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) 6185) nil (25684 297 795169 309000) 0 nil])
([nil nil ((6056 . 6057) (6056 . 6057) (6056 . 6057) (nil rear-nonsticky nil 6055 . 6056) (nil fontified nil 5955 . 6056) (5955 . 6056) (5953 . 5955) (5950 . 5953) (5949 . 5951) (t 25684 297 796110 849000)) nil (25684 551 587397 971000) 0 nil])
([nil nil ((5976 . 5979) (5967 . 5976) (5965 . 5968) (#("+" 0 1 (fontified t)) . -5965) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (#("+" 0 1 (fontified t)) . -5966) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) 5967 (5966 . 5967) (5959 . 5966) (5956 . 5964) (5955 . 5956)) nil (25684 551 587393 513000) 0 nil])
([nil nil ((5976 . 5977) (#("2" 0 1 (face markdown-html-attr-value-face fontified t)) . -5976) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) 5977 (5976 . 5977) (#("4" 0 1 (face markdown-html-attr-value-face fontified t)) . -5976) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) 5977 (t 25684 551 591067 28000)) nil (25684 562 722270 319000) 0 nil])
([nil nil ((5978 . 5979) (#("5" 0 1 (face markdown-html-attr-value-face fontified t)) . -5978) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) 5979 (t 25684 562 727013 953000)) nil (25684 569 25849 435000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5954 . 5955) (#("
" 0 1 (fontified nil font-lock-multiline t)) . -5975) (5954 . 5976) (t 25684 569 26983 676000)) nil (25684 602 985147 729000) 0 nil])
([nil nil ((5977 . 5980) (5975 . 5977)) nil (25684 607 960475 338000) 0 nil] [nil nil ((nil rear-nonsticky nil 6080 . 6081) (nil fontified nil 5980 . 6081) (5980 . 6081) (5979 . 5980) (5976 . 5977) (5976 . 5978) (5975 . 5977)) ((#("

" 0 1 (font-lock-multiline t fontified nil) 1 2 (font-lock-multiline t fontified nil)) . 5975) (undo-tree-id1334 . 1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -2) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (#("##" 0 2 (face markdown-header-delimiter-face markdown-heading-2-atx (5977 6081 nil nil nil nil nil nil 5977 5980 5980 6081 6081 6081 #<buffer slides.md>) markdown-heading (5977 6081 nil nil nil nil nil nil 5977 5980 5980 6081 6081 6081 #<buffer slides.md>) fontified nil)) . 5976) (undo-tree-id1341 . -2) (undo-tree-id1342 . -2) (undo-tree-id1343 . -2) (#("
" 0 1 (fontified t)) . 5976) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (#(" " 0 1 (face markdown-header-delimiter-face markdown-heading-2-atx (5977 6081 nil nil nil nil nil nil 5977 5980 5980 6081 6081 6081 #<buffer slides.md>) markdown-heading (5977 6081 nil nil nil nil nil nil 5977 5980 5980 6081 6081 6081 #<buffer slides.md>) fontified nil)) . 5979) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (#("https://user-images.githubusercontent.com/26186289/236303960-bd9f3386-d1a2-44ac-be02-0c172c2f302d.png" 0 100 (face markdown-header-face-2 markdown-heading-2-atx (5977 6081 nil nil nil nil nil nil 5977 5980 5980 6081 6081 6081 #<buffer slides.md>) markdown-heading (5977 6081 nil nil nil nil nil nil 5977 5980 5980 6081 6081 6081 #<buffer slides.md>) fontified nil) 100 101 (rear-nonsticky nil face markdown-header-face-2 markdown-heading-2-atx (5977 6081 nil nil nil nil nil nil 5977 5980 5980 6081 6081 6081 #<buffer slides.md>) markdown-heading (5977 6081 nil nil nil nil nil nil 5977 5980 5980 6081 6081 6081 #<buffer slides.md>) fontified nil)) . 5980) (undo-tree-id1349 . -100) (undo-tree-id1350 . -100) (nil rear-nonsticky nil 6080 . 6081)) (25684 602 984830 836000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6027 . 6028) (nil fontified nil 5980 . 6028) (5980 . 6028) 5979) nil (25684 635 693102 135000) 0 nil] [nil nil ((nil rear-nonsticky nil 6080 . 6081) (nil fontified nil 5980 . 6081) (5980 . 6081) 5979) ((#("https://user-images.githubusercontent.com/26186289/236303960-bd9f3386-d1a2-44ac-be02-0c172c2f302d.png" 0 100 (face markdown-header-face-2 markdown-heading-2-atx (5977 6081 nil nil nil nil nil nil 5977 5980 5980 6081 6081 6081 #<buffer slides.md>) markdown-heading (5977 6081 nil nil nil nil nil nil 5977 5980 5980 6081 6081 6081 #<buffer slides.md>) fontified nil) 100 101 (rear-nonsticky nil face markdown-header-face-2 markdown-heading-2-atx (5977 6081 nil nil nil nil nil nil 5977 5980 5980 6081 6081 6081 #<buffer slides.md>) markdown-heading (5977 6081 nil nil nil nil nil nil 5977 5980 5980 6081 6081 6081 #<buffer slides.md>) fontified nil)) . 5980) (undo-tree-id1351 . -100) (undo-tree-id1352 . -100) (undo-tree-id1353 . -100) (nil rear-nonsticky nil 6080 . 6081)) (25684 607 960314 286000) 0 nil])
nil
([nil nil ((6011 . 6012) (#("m" 0 1 (face markdown-header-face-2 markdown-heading-2-atx (5977 6018 nil nil nil nil nil nil 5977 5980 5980 6018 6018 6018 #<buffer slides.md>) markdown-heading (5977 6018 nil nil nil nil nil nil 5977 5980 5980 6018 6018 6018 #<buffer slides.md>) fontified t)) . -6011) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) 6012 (6000 . 6001) (#("a" 0 1 (face markdown-header-face-2 markdown-heading-2-atx (5977 6018 nil nil nil nil nil nil 5977 5980 5980 6018 6018 6018 #<buffer slides.md>) markdown-heading (5977 6018 nil nil nil nil nil nil 5977 5980 5980 6018 6018 6018 #<buffer slides.md>) fontified t)) . -6000) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) 6001 (#(" " 0 1 (face markdown-header-face-2 markdown-heading-2-atx (5977 6019 nil nil nil nil nil nil 5977 5980 5980 6019 6019 6019 #<buffer slides.md>) markdown-heading (5977 6019 nil nil nil nil nil nil 5977 5980 5980 6019 6019 6019 #<buffer slides.md>) fontified t)) . -5999) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (#("e" 0 1 (face markdown-header-face-2 markdown-heading-2-atx (5977 6020 nil nil nil nil nil nil 5977 5980 5980 6020 6020 6020 #<buffer slides.md>) markdown-heading (5977 6020 nil nil nil nil nil nil 5977 5980 5980 6020 6020 6020 #<buffer slides.md>) fontified t)) . -6000) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (#("f" 0 1 (face markdown-header-face-2 markdown-heading-2-atx (5977 6021 nil nil nil nil nil nil 5977 5980 5980 6021 6021 6021 #<buffer slides.md>) markdown-heading (5977 6021 nil nil nil nil nil nil 5977 5980 5980 6021 6021 6021 #<buffer slides.md>) fontified t)) . -6001) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (#("f" 0 1 (face markdown-header-face-2 markdown-heading-2-atx (5977 6022 nil nil nil nil nil nil 5977 5980 5980 6022 6022 6022 #<buffer slides.md>) markdown-heading (5977 6022 nil nil nil nil nil nil 5977 5980 5980 6022 6022 6022 #<buffer slides.md>) fontified t)) . -6002) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (#("i" 0 1 (face markdown-header-face-2 markdown-heading-2-atx (5977 6023 nil nil nil nil nil nil 5977 5980 5980 6023 6023 6023 #<buffer slides.md>) markdown-heading (5977 6023 nil nil nil nil nil nil 5977 5980 5980 6023 6023 6023 #<buffer slides.md>) fontified t)) . -6003) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (#("c" 0 1 (face markdown-header-face-2 markdown-heading-2-atx (5977 6024 nil nil nil nil nil nil 5977 5980 5980 6024 6024 6024 #<buffer slides.md>) markdown-heading (5977 6024 nil nil nil nil nil nil 5977 5980 5980 6024 6024 6024 #<buffer slides.md>) fontified t)) . -6004) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (#("i" 0 1 (face markdown-header-face-2 markdown-heading-2-atx (5977 6025 nil nil nil nil nil nil 5977 5980 5980 6025 6025 6025 #<buffer slides.md>) markdown-heading (5977 6025 nil nil nil nil nil nil 5977 5980 5980 6025 6025 6025 #<buffer slides.md>) fontified t)) . -6005) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (#("e" 0 1 (face markdown-header-face-2 markdown-heading-2-atx (5977 6026 nil nil nil nil nil nil 5977 5980 5980 6026 6026 6026 #<buffer slides.md>) markdown-heading (5977 6026 nil nil nil nil nil nil 5977 5980 5980 6026 6026 6026 #<buffer slides.md>) fontified t)) . -6006) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (#("n" 0 1 (face markdown-header-face-2 markdown-heading-2-atx (5977 6027 nil nil nil nil nil nil 5977 5980 5980 6027 6027 6027 #<buffer slides.md>) markdown-heading (5977 6027 nil nil nil nil nil nil 5977 5980 5980 6027 6027 6027 #<buffer slides.md>) fontified t)) . -6007) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) 6008 (#("t" 0 1 (face markdown-header-face-2 markdown-heading-2-atx (5977 6028 nil nil nil nil nil nil 5977 5980 5980 6028 6028 6028 #<buffer slides.md>) markdown-heading (5977 6028 nil nil nil nil nil nil 5977 5980 5980 6028 6028 6028 #<buffer slides.md>) fontified t)) . -6008) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) 6009 (5994 . 5995) (#("o" 0 1 (face markdown-header-face-2 markdown-heading-2-atx (5977 6028 nil nil nil nil nil nil 5977 5980 5980 6028 6028 6028 #<buffer slides.md>) markdown-heading (5977 6028 nil nil nil nil nil nil 5977 5980 5980 6028 6028 6028 #<buffer slides.md>) fontified t)) . -5994) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) 5995 (5980 . 5981) (#("c" 0 1 (face markdown-header-face-2 markdown-heading-2-atx (5977 6028 nil nil nil nil nil nil 5977 5980 5980 6028 6028 6028 #<buffer slides.md>) markdown-heading (5977 6028 nil nil nil nil nil nil 5977 5980 5980 6028 6028 6028 #<buffer slides.md>) fontified t)) . -5980) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) 5981 (6028 . 6029)) nil (25684 635 693096 374000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 6747 . 6748) (nil fontified nil 6640 . 6748) (6640 . 6748) (6638 . 6640) (nil rear-nonsticky nil 6637 . 6638) (nil fontified nil 6631 . 6638) (6631 . 6638) (6629 . 6631) (6614 . 6629) (6613 . 6615) (t 25684 635 694653 956000)) nil (25684 746 50389 686000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -6639) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (#("," 0 1 (fontified t)) . -6640) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) 6641) nil (25684 746 50385 328000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6630 . 6631) (#("
" 0 1 (fontified nil)) . -6650) (6630 . 6651) (t 25684 746 50074 404000)) nil (25684 763 681746 946000) 0 nil])
([nil nil ((6767 . 6771)) nil (25684 763 681745 243000) 0 nil])
([nil nil ((6771 . 6772) 6770) nil (25684 763 681742 107000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6807 . 6808) (nil fontified nil 6773 . 6808) (6773 . 6808) (6771 . 6773) (t 25684 763 681978 355000)) nil (25684 821 472190 379000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 6773) (undo-tree-id1410 . -1) (t 25684 821 473657 580000)) nil (25684 1076 556141 529000) 0 nil])
([nil nil ((#("{ $slidev.nav.currentPage.value }}
" 0 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t)) . 6773) (undo-tree-id1387 . -34) (undo-tree-id1388 . 1) (undo-tree-id1389 . -34) (undo-tree-id1390 . -33) (undo-tree-id1391 . -34) (undo-tree-id1392 . -35) (undo-tree-id1393 . -35) (undo-tree-id1394 . -35) (undo-tree-id1395 . -35) (undo-tree-id1396 . -35) (undo-tree-id1397 . -35) (undo-tree-id1398 . -35) (undo-tree-id1399 . -35) (undo-tree-id1400 . -35) (undo-tree-id1401 . -35) (undo-tree-id1402 . -1) (undo-tree-id1403 . -35) (undo-tree-id1404 . -35) (undo-tree-id1405 . -35) (undo-tree-id1406 . -35) (undo-tree-id1407 . -34) (undo-tree-id1408 . -35) (undo-tree-id1409 . -35) 6807) nil (25684 1076 556138 404000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6816 . 6817) (nil fontified nil 6773 . 6817) (6773 . 6817)) nil (25684 1076 556115 741000) 0 nil])
([nil nil ((6817 . 6818) 6816) nil (25684 1076 556111 323000) 0 nil])
([nil nil ((6813 . 6820) (t 25684 1076 556154 713000)) nil (25684 1098 67421 210000) 0 nil])
([nil nil ((6814 . 6819) (#("l" 0 1 (face markdown-html-attr-value-face fontified t)) . -6814) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (#("e" 0 1 (face markdown-html-attr-value-face fontified t)) . -6815) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (#("f" 0 1 (face markdown-html-attr-value-face fontified t)) . -6816) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (#("t" 0 1 (face markdown-html-attr-value-face fontified t)) . -6817) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) 6818 (t 25684 1098 68022 703000)) nil (25684 1108 356169 506000) 0 nil])
([nil nil ((6820 . 6821) (#("4" 0 1 (face markdown-html-attr-value-face fontified t)) . -6820) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) 6821 (t 25684 1108 355959 388000)) nil (25684 1114 788286 751000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6155 . 6156) (#("
" 0 1 (fontified nil)) . -6208) (6155 . 6209) (t 25684 1114 787919 724000)) nil (25684 1125 804874 714000) 0 nil])
([nil nil ((6209 . 6210)) nil (25684 1125 804870 987000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5949 . 5950) (#("
" 0 1 (fontified nil markdown-heading (6156 6212 6156 6208 nil nil 6209 6212 #<buffer slides.md>) markdown-heading-2-setext (6156 6212 6156 6208 nil nil 6209 6212 #<buffer slides.md>) font-lock-multiline t)) . -6002) (5949 . 6003) (t 25684 1125 803851 627000)) nil (25684 1199 544780 257000) 0 nil])
([nil nil ((6003 . 6004)) nil (25684 1199 544779 385000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5648 . 5649) (nil fontified nil 5595 . 5649) (5595 . 5649)) nil (25684 1199 544778 734000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5648) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) 5649 (5595 . 5596)) nil (25684 1199 544777 171000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5294 . 5295) (nil fontified nil 5242 . 5295) (5242 . 5295)) nil (25684 1199 544767 202000) 0 nil])
([nil nil ((5295 . 5296)) nil (25684 1199 544766 481000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4963 . 4964) (nil fontified nil 4911 . 4964) (4911 . 4964)) nil (25684 1199 544765 950000) 0 nil])
([nil nil ((4964 . 4965)) nil (25684 1199 544765 208000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4639 . 4640) (nil fontified nil 4587 . 4640) (4587 . 4640)) nil (25684 1199 544764 657000) 0 nil])
([nil nil ((4640 . 4641)) nil (25684 1199 544763 996000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4003 . 4004) (nil fontified nil 3951 . 4004) (3951 . 4004)) nil (25684 1199 544763 455000) 0 nil])
([nil nil ((4004 . 4005)) nil (25684 1199 544762 794000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3340 . 3341) (nil fontified nil 3288 . 3341) (3288 . 3341)) nil (25684 1199 544762 233000) 0 nil])
([nil nil ((3341 . 3342)) nil (25684 1199 544761 481000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2609 . 2610) (nil fontified nil 2557 . 2610) (2557 . 2610)) nil (25684 1199 544760 860000) 0 nil])
([nil nil ((2610 . 2611)) nil (25684 1199 544759 919000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1924 . 1925) (nil fontified nil 1872 . 1925) (1872 . 1925)) nil (25684 1199 544758 436000) 0 nil])
([nil current ((1925 . 1926)) nil (25684 1199 544754 889000) 0 nil])
nil
